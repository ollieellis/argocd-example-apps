apiVersion: v1
kind: Namespace
metadata:
  name: stackgres
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sgbackups.stackgres.io
spec:
  group: stackgres.io
  versions:
    - name: v1beta1
      served: true
      storage: true
  scope: Namespaced
  names:
    kind: SGBackup
    listKind: SGBackupList
    plural: sgbackups
    singular: sgbackup
    shortNames:
      - sgbkp
  validation:
    openAPIV3Schema:
      type: object
      required: ["metadata", "spec"]
      description: |
        A manual or automatically generated backup of a SGCluster.
      properties:
        metadata:
          type: object
          properties:
            name:
              type: string
              description: |
                Name of the backup. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                The name must be unique across all StackGres backups in the same namespace."
        spec:
          type: object
          properties:
            sgCluster:
              type: string
              description: |
                The name of the `SGCluster` from which this backup is/will be taken.
            managedLifecycle:
              type: boolean
              description: |
                Indicate if this backup is permanent and should not be removed by the automated retention policy.
        status:
          type: object
          properties:
            internalName:
              type: string
              description: |
                The name of the backup.
            process:
              type: object
              properties:
                status:
                  type: string
                  enum: [Running, Completed, Failed]
                  description: |
                    Status of the backup.
                failure:
                  type: string
                  description: |
                    If the status is `failed` this field will contain a message indicating the failure reason.
                jobPod:
                  type: string
                  description: |
                    Name of the pod assigned to the backup. StackGres utilizes internally a locking mechanism based on the pod name of the job that creates the backup.
                managedLifecycle:
                  type: boolean
                  description: |
                    Status (may be transient) until converging to `spec.managedLifecycle`.
                timing:
                  type: object
                  properties:
                    start:
                      type: string
                      # format: date-time
                      description: |
                        Start time of backup.
                    end:
                      type: string
                      # format: date-time
                      description: |
                        End time of backup.
                    stored:
                      type: string
                      # format: date-time
                      description: |
                        Time at which the backup is safely stored in the object storage.
            backupInformation:
              type: object
              properties:
                hostname:
                  type: string
                  description: |
                    Hostname of the instance where the backup is taken from.
                sourcePod:
                  type: string
                  description: |
                    Pod where the backup is taken from.
                systemIdentifier:
                  type: string
                  description: |
                    Postgres *system identifier* of the cluster this backup is taken from.
                postgresVersion:
                  type: string
                  description: |
                    Postgres version of the server where the backup is taken from.
                pgData:
                  type: string
                  description: |
                    Data directory where the backup is taken from.
                size:
                  type: object
                  properties:
                    uncompressed:
                      type: integer
                      format: int64
                      description: |
                        Size (in bytes) of the uncompressed backup.
                    compressed:
                      type: integer
                      format: int64
                      description: |
                        Size (in bytes) of the compressed backup.
                lsn:
                  type: object
                  properties:
                    start:
                      type: string
                      description: |
                        LSN of when the backup started.
                    end:
                      type: string
                      description: |
                        LSN of when the backup finished.
                startWalFile:
                  type: string
                  description: |
                    WAL segment file name when the backup was started.
                timeline:
                  type: string
                  description: |
                    Backup timeline.
                controlData:
                  type: object
                  description: |
                    An object containing data from the output of pg_controldata on the backup.
            sgBackupConfig:
              type: object
              description: The name of the backup configuration used to perform this backup.
              properties:
                compression:
                  type: string
                  description: |
                    Select the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                  enum: [lz4, lzma, brotli]
                storage:
                  type: object
                  description: |
                    Backup storage configuration.
                  properties:
                    type:
                      type: string
                      enum: [s3, s3Compatible, gcs, azureBlob]
                      description: |
                        Specifies the type of object storage used for storing the base backups and WAL segments.
                        Possible values:
                        *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                        *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                        *  `gcs`: Google Cloud Storage.
                        *  `azureBlob`: Microsoft Azure Blob Storage.
                    s3:
                      type: object
                      description: |
                        Amazon Web Services S3 configuration.
                      properties:
                        bucket:
                          type: string
                          pattern: ^[^/]+(/[^/]*)*$
                          description: |
                            AWS S3 bucket name.
                        path:
                          type: string
                          pattern: ^(/[^/]*)*$
                          description: |
                            Optional path within the S3 bucket. Note that StackGres generates in any case a folder per
                            StackGres cluster, using the `SGCluster.metadata.name`.
                        region:
                          type: string
                          description: |
                            AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
                        storageClass:
                          type: string
                          description: |
                            [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                        awsCredentials:
                          type: object
                          description: |
                            Credentials to access AWS S3 for writing and reading.
                          properties:
                            secretKeySelectors:
                              type: object
                              description: |
                                Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `awsCredentials`.
                              properties:
                                accessKeyId:
                                  type: object
                                  description: |
                                    [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: [key, name]
                                secretAccessKey:
                                  type: object
                                  description: |
                                    [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: [key, name]
                              required: [accessKeyId, secretAccessKey]
                          required: [secretKeySelectors]
                      required: [bucket, awsCredentials]
                    s3Compatible:
                      type: object
                      description: AWS S3-Compatible API configuration
                      properties:
                        bucket:
                          type: string
                          pattern: ^[^/]+(/[^/]*)*$
                          description: |
                            Bucket name.
                        path:
                          type: string
                          pattern: ^(/[^/]*)*$
                          description: |
                            Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                        enablePathStyleAddressing:
                          type: boolean
                          description: |
                            Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`). Defaults to false.
                        endpoint:
                          type: string
                          description: |
                            Overrides the default url to connect to an S3-compatible service.
                            For example: `http://s3-like-service:9000`.
                        region:
                          type: string
                          description: |
                            AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
                        storageClass:
                          type: string
                          description: |
                            [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                        awsCredentials:
                          type: object
                          description: |
                            Credentials to access AWS S3 for writing and reading.
                          properties:
                            secretKeySelectors:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the `awsCredentials`.
                              properties:
                                accessKeyId:
                                  type: object
                                  description: |
                                    [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: [key, name]
                                secretAccessKey:
                                  type: object
                                  description: |
                                    [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: [key, name]
                              required: [accessKeyId, secretAccessKey]
                          required: [secretKeySelectors]
                      required: [bucket, awsCredentials]
                    gcs:
                      type: object
                      description: |
                        Google Cloud Storage configuration.
                      properties:
                        bucket:
                          type: string
                          pattern: ^[^/]+(/[^/]*)*$
                          description: |
                            GCS bucket name.
                        path:
                          type: string
                          pattern: ^(/[^/]*)*$
                          description: |
                            Optional path within the GCS bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                        gcpCredentials:
                          type: object
                          description: |
                            Credentials to access GCS for writing and reading.
                          properties:
                            fetchCredentialsFromMetadataService:
                              type: boolean
                              description: |
                                If true, the credentials will be fetched from the GCE/GKE metadata service and the credentials from `secretKeySelectors` field will not be used.

                                This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
                            secretKeySelectors:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
                              properties:
                                serviceAccountJSON:
                                  type: object
                                  description: |
                                    A service account key from GCP. In JSON format, as downloaded from the GCP Console.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: [key, name]
                              required: [serviceAccountJSON]
                          required: []
                      required: [bucket, gcpCredentials]
                    azureBlob:
                      type: object
                      description: |
                        Azure Blob Storage configuration.
                      properties:
                        bucket:
                          type: string
                          pattern: ^[^/]+(/[^/]*)*$
                          description: |
                            Azure Blob Storage bucket name.
                        path:
                          type: string
                          pattern: ^(/[^/]*)*$
                          description: |
                            Optional path within the Azure Blobk bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                        azureCredentials:
                          type: object
                          description: |
                            The credentials to access Azure Blob Storage for writing and reading.
                          properties:
                            secretKeySelectors:
                              type: object
                              description: |
                                Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `azureCredentials`.
                              properties:
                                storageAccount:
                                  type: object
                                  description: |
                                    [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the name of the storage account.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: [key, name]
                                accessKey:
                                  type: object
                                  description: |
                                    [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the primary or secondary access key for the storage account.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: [key, name]
                              required: [storageAccount, accessKey]
                      required: [bucket, azureCredentials]
                  required: [type]
              required: [storage]
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sgbackupconfigs.stackgres.io
  # annotations:
  #   "helm.sh/hook": crd-install
spec:
  group: stackgres.io
  versions:
    - name: v1beta1
      served: true
      storage: true
  scope: Namespaced
  names:
    kind: SGBackupConfig
    listKind: SGBackupConfigList
    plural: sgbackupconfigs
    singular: sgbackupconfig
    shortNames:
      - sgbac
  validation:
    openAPIV3Schema:
      type: object
      required: ["metadata", "spec"]
      properties:
        metadata:
          type: object
          properties:
            name:
              type: string
              description: |
                Name of the Backup Configuration. StackGres supports [Continuous Archiving](https://www.postgresql.org/docs/current/continuous-archiving.html)-based backups which are performed automatically, helping achieve near-zero data loss in case of recovery from a backup. An SGBackupConfig contains the necessary configuration to perform these automatic backups and may be referenced by zero or more SGClusters, and if so it would be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                The name must be unique across all backup configurations in the same namespace.
        spec:
          type: object
          properties:
            baseBackups:
              type: object
              description: |
                Back backups configuration.
              properties:
                cronSchedule:
                  type: string
                  description: |
                    Continuous Archiving backups are composed of periodic *base backups* and all the WAL segments produced in between those base backups. This parameter specifies at what time and with what frequency to start performing a new base backup.

                    Use cron syntax (`m h dom mon dow`) for this parameter, i.e., 5 values separated by spaces:
                    *  `m`: minute, 0 to 59.
                    *  `h`: hour, 0 to 23.
                    *  `dom`: day of month, 1 to 31 (recommended not to set it higher than 28).
                    *  `mon`: month, 1 to 12.
                    *  `dow`: day of week, 0 to 7 (0 and 7 both represent Sunday).

                    Also ranges of values (`start-end`), the symbol `*` (meaning `first-last`) or even `*/N`, where `N` is a number, meaning ""every `N`, may be used. All times are UTC. It is recommended to avoid 00:00 as base backup time, to avoid overlapping with any other external operations happening at this time.

                    If not set, full backups are performed each day at 05:00 UTC.
                retention:
                  type: integer
                  minimum: 1
                  description: |
                    When an automatic retention policy is defined to delete old base backups, this parameter specifies the number of base backups to keep, in a sliding window.

                    Consequently, the time range covered by backups is `periodicity*retention`, where `periodicity` is the separation between backups as specified by the `cronSchedule` property.

                    Default is 5.
                compression:
                  type: string
                  description: |
                    Specifies the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                  enum: ["lz4", "lzma", "brotli"]
                performance:
                  type: object
                  properties:
                    maxNetworkBandwitdh:
                      type: integer
                      description: |
                        Maximum storage upload bandwidth used when storing a backup. In bytes (per second).
                    maxDiskBandwitdh:
                      type: integer
                      description: |
                        Maximum disk read I/O when performing a backup. In bytes (per second).
                    uploadDiskConcurrency:
                      type: integer
                      minimum: 1
                      description: |
                        Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use. By default, it's set to 1 (use one stream).
            storage:
              type: object
              description: |
                Backup storage configuration.
              properties:
                type:
                  type: string
                  enum: ["s3", "s3Compatible", "gcs", "azureBlob"]
                  description: |
                    Determine the type of object storage used for storing the base backups and WAL segments.
                    Possible values:
                    *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                    *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                    *  `gcs`: Google Cloud Storage.
                    *  `azureBlob`: Microsoft Azure Blob Storage.
                s3:
                  type: object
                  description: |
                    Amazon Web Services S3 configuration.
                  properties:
                    bucket:
                      type: string
                      pattern: '^((s3|https?)://)?[^/]+(/[^/]*)*$'
                      description: |
                        AWS S3 bucket name.
                    path:
                      type: string
                      pattern: '^(/[^/]*)*$'
                      description: |
                        Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                    region:
                      type: string
                      description: |
                        The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                    storageClass:
                      type: string
                      description: |
                        The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                    awsCredentials:
                      type: object
                      description: |
                        The credentials to access AWS S3 for writing and reading.
                      properties:
                        secretKeySelectors:
                          type: object
                          description: |
                            Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)(s) to reference the Secrets that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                          properties:
                            accessKeyId:
                              type: object
                              description: |
                                AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                            secretAccessKey:
                              type: object
                              description: |
                                AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                          required: ["accessKeyId", "secretAccessKey"]
                      required: ["secretKeySelectors"]
                  required: ["bucket", "awsCredentials"]
                s3Compatible:
                  type: object
                  description: "AWS S3-Compatible API configuration"
                  properties:
                    bucket:
                      type: string
                      pattern: '^((s3|https?)://)?[^/]+(/[^/]*)*$'
                      description: |
                        Bucket name.
                    path:
                      type: string
                      pattern: '^(/[^/]*)*$'
                      description: |
                        Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                    enablePathStyleAddressing:
                      type: boolean
                      description: |
                        Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`).

                        Defaults to false.
                    endpoint:
                      type: string
                      description: |
                        Overrides the default url to connect to an S3-compatible service.
                        For example: `http://s3-like-service:9000`.
                    region:
                      type: string
                      description: |
                        The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                    storageClass:
                      type: string
                      description: |
                        The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                    awsCredentials:
                      type: object
                      description: |
                        The credentials to access AWS S3 for writing and reading.
                      properties:
                        secretKeySelectors:
                          type: object
                          description: |
                            Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                          properties:
                            accessKeyId:
                              type: object
                              description: |
                                AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                            secretAccessKey:
                              type: object
                              description: |
                                AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                          required: ["accessKeyId", "secretAccessKey"]
                      required: ["secretKeySelectors"]
                  required: ["bucket", "awsCredentials"]
                gcs:
                  type: object
                  description: |
                    Google Cloud Storage configuration.
                  properties:
                    bucket:
                      type: string
                      pattern: "^(gs://)?[^/]+(/[^/]*)*$"
                      description: |
                        GCS bucket name.
                    path:
                      type: string
                      pattern: "^(/[^/]*)*$"
                      description: |
                        Optional path within the GCS bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                    gcpCredentials:
                      type: object
                      description: |
                        The credentials to access GCS for writing and reading.
                      properties:
                        fetchCredentialsFromMetadataService:
                          type: boolean
                          description: |
                            If true, the credentials will be fetched from the GCE/GKE metadata service and the field `secretKeySelectors` have to be set to null or omitted.

                            This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
                        secretKeySelectors:
                          type: object
                          description: |
                            A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
                          properties:
                            serviceAccountJSON:
                              type: object
                              description: |
                                A service account key from GCP. In JSON format, as downloaded from the GCP Console.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                          required: ["serviceAccountJSON"]
                      required: []
                  required: ["bucket", "gcpCredentials"]
                azureBlob:
                  type: object
                  description: |
                    Azure Blob Storage configuration.
                  properties:
                    bucket:
                      type: string
                      pattern: "^(azure://)?[^/]+(/[^/]*)*$"
                      description: |
                        Azure Blob Storage bucket name.
                    path:
                      type: string
                      pattern: "^(/[^/]*)*$"
                      description: |
                        Optional path within the Azure Blob bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                    azureCredentials:
                      type: object
                      description: |
                        The credentials to access Azure Blob Storage for writing and reading.
                      properties:
                        secretKeySelectors:
                          type: object
                          description: |
                            Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `azureCredentials`. . Note that you may use the same or different Secrets for the `storageAccount` and the `accessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                          properties:
                            storageAccount:
                              type: object
                              description: |
                                The [Storage Account](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview?toc=/azure/storage/blobs/toc.json) that contains the Blob bucket to be used.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                            accessKey:
                              type: object
                              description: |
                                The [storage account access key](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal).
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                          required: ["storageAccount", "accessKey"]
                  required: ["bucket", "azureCredentials"]
              required: ["type"]
          required: ["storage"]
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sgclusters.stackgres.io
  # annotations:
  #   "helm.sh/hook": crd-install
spec:
  group: stackgres.io
  versions:
    - name: v1beta1
      served: true
      storage: true
  scope: Namespaced
  names:
    kind: SGCluster
    listKind: SGClusterList
    plural: sgclusters
    singular: sgcluster
    shortNames:
      - sgclu
  validation:
    openAPIV3Schema:
      type: object
      required: ["metadata", "spec"]
      properties:
        metadata:
          type: object
          properties:
            name:
              type: string
              description: |
                Name of the StackGres cluster. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                The name must be unique across all StackGres clusters in the same namespace. The full cluster name includes the namespace in which the cluster is created.
        spec:
          type: object
          properties:
            postgresVersion:
              type: string
              description: |
                Postgres version used on the cluster. It is either of:
                *  The string 'latest', which automatically sets the latest major.minor Postgres version.
                *  A major version, like '12' or '11', which sets that major version and the latest minor version.
                *  A specific major.minor version, like '12.2'.
            instances:
              type: integer
              minimum: 1
              maximum: 16
              description: |
                Number of StackGres instances for the cluster. Each instance contains one Postgres server. Out of all of the Postgres servers, one is elected as the master, the rest remain as read-only replicas.
            sgInstanceProfile:
              type: string
              description: |
                Name of the [SGInstanceProfile](https://stackgres.io/doc/latest/reference/crd/sginstanceprofile). A SGInstanceProfile defines CPU and memory limits. Must exist before creating a cluster. When no profile is set, a default (currently: 1 core, 2 GiB RAM) one is used.
            metadata:
              type: object
              description: Metadata information from cluster created resources.
              properties:
                annotations:
                  type: object
                  description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) to be passed to resources created and managed by StackGres.
                  properties:
                    allResources:
                      type: object
                      description: Annotations to attach to any resource created or managed by StackGres.
                      additionalProperties:
                        type: string
                    pods:
                      type: object
                      description: Annotations to attach to pods created or managed by StackGres.
                      additionalProperties:
                        type: string
                    services:
                      type: object
                      description: Annotations to attach to services created or managed by StackGres.
                      additionalProperties:
                        type: string
            postgresServices:
              type: object
              description: Kubernetes [services](https://kubernetes.io/docs/concepts/services-networking/service/) created or managed by StackGres.
              properties:
                primary:
                  type: object
                  description: Configuration for the `-primary` service. It provides a stable connection (regardless of primary failures or switchovers) to the read-write Postgres server of the cluster.
                  properties:
                    enabled:
                      type: boolean
                      description: Specify if the `-primary` service should be created or not.
                    type:
                      type: string
                      enum: ["ClusterIP", "LoadBalancer", "NodePort"]
                      description: Specifies the type of Kubernetes service.
                    annotations:
                      type: object
                      additionalProperties:
                        type: string
                      description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-primary` service.
                replicas:
                  type: object
                  description: Configuration for the `-replicas` service. It provides a stable connection (regardless of replica node failures) to any read-only Postgres server of the cluster. Read-only servers are load-balanced via this service.
                  properties:
                    enabled:
                      type: boolean
                      description: Specify if the `-replicas` service should be created or not.
                    type:
                      type: string
                      enum: ["ClusterIP", "LoadBalancer", "NodePort"]
                      description: Specifies the type of Kubernetes service.
                    annotations:
                      type: object
                      additionalProperties:
                        type: string
                      description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-replicas` service.
            pods:
              type: object
              description: Cluster pod's configuration.
              properties:
                persistentVolume:
                  type: object
                  description: Pod's persistent volume configuration.
                  properties:
                    size:
                      type: string
                      pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi|Ti)$'
                      description: |
                        Size of the PersistentVolume set for each instance of the cluster. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
                    storageClass:
                      type: string
                      description: |
                        Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
                  required: ["size"]
                disableConnectionPooling:
                  type: boolean
                  description: If set to `true`, avoids creating a connection pooling (using [PgBouncer](https://www.pgbouncer.org/)) sidecar.
                disableMetricsExporter:
                  type: boolean
                  description: If set to `true`, avoids creating the Prometheus exporter sidecar. Recommended when there's no intention to use Prometheus for monitoring.
                disablePostgresUtil:
                  type: boolean
                  description: If set to `true`, avoids creating the `postgres-util` sidecar. This sidecar contains usual Postgres administration utilities *that are not present in the main (`patroni`) container*, like `psql`. Only disable if you know what you are doing.
                metadata:
                  type: object
                  description: Pod custom metadata information.
                  properties:
                    labels:
                      type: object
                      additionalProperties:
                        type: string
                      description: Additional labels for StackGres Pods.
                scheduling:
                  type: object
                  description: Pod custom scheduling configuration.
                  properties:
                    nodeSelector:
                      type: object
                      additionalProperties:
                        type: string
                      description: Pod custom node selector.
                    tolerations:
                      type: array
                      description: Pod custom node tolerations
                      items:
                        type: object
                        description: Pod custom node toleration
                        properties:
                          key:
                            type: string
                            description: |
                              Key is the taint key that the toleration applies to. Empty means match all taint
                               keys. If the key is empty, operator must be Exists; this combination means to
                               match all values and all keys.
                          operator:
                            type: string
                            description: |
                              Operator represents a key's relationship to the value. Valid operators are Exists
                               and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that
                               a pod can tolerate all taints of a particular category.
                          value:
                            type: string
                            description: |
                              Value is the taint value the toleration matches to. If the operator is Exists, the
                               value should be empty, otherwise just a regular string.
                          effect:
                            type: string
                            description: |
                              Effect indicates the taint effect to match. Empty means match all taint effects.
                               When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          tolerationSeconds:
                            type: integer
                            description: |
                              TolerationSeconds represents the period of time the toleration (which must be of
                               effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                               it is not set, which means tolerate the taint forever (do not evict). Zero and
                               negative values will be treated as 0 (evict immediately) by the system.
              required: ["persistentVolume"]
            configurations:
              type: object
              description: |
                Cluster custom configurations.
              properties:
                sgPostgresConfig:
                  type: string
                  description: |
                    Name of the [SGPostgresConfig](https://stackgres.io/doc/latest/reference/crd/sgpgconfig) used for the cluster. It must exist. When not set, a default Postgres config, for the major version selected, is used.
                sgPoolingConfig:
                  type: string
                  description: |
                    Name of the [SGPoolingConfig](https://stackgres.io/doc/latest/reference/crd/sgpoolconfig) used for this cluster. Each pod contains a sidecar with a connection pooler (currently: [PgBouncer](https://www.pgbouncer.org/)). The connection pooler is implemented as a sidecar.

                    If not set, a default configuration will be used. Disabling connection pooling altogether is possible if the disableConnectionPooling property of the pods object is set to true.
                sgBackupConfig:
                  type: string
                  description: |
                    Name of the [SGBackupConfig](https://stackgres.io/doc/latest/reference/crd/sgbackupconfig) to use for the cluster. It defines the backups policy, storage and retention, among others, applied to the cluster. When not set, a default backup config is used.
            initialData:
              type: object
              description: Cluster initialization data options. Cluster may be initialized empty, or from a backup restoration. Specifying scripts to run on the database after cluster creation is also possible.
              properties:
                restore:
                  type: object
                  properties:
                    fromBackup:
                      type: string
                      description: |
                        When set to the UID of an existing [SGBackup](https://stackgres.io/doc/latest/reference/crd/sgbackup), the cluster is initialized by restoring the backup data to it. If not set, the cluster is initialized empty. The selected backup must be in the same namespace.
                    downloadDiskConcurrency:
                      type: integer
                      minimum: 1
                      description: |
                        The backup fetch process may fetch several streams in parallel. Parallel fetching is enabled when set to a value larger than one.
                scripts:
                  type: array
                  description: |
                    A list of SQL scripts executed in sequence, exactly once, when the database is bootstrap and/or after restore is completed.
                  items:
                    type: object
                    description: |
                      Scripts are executed in auto-commit mode with the user `postgres` in the specified database (or in database `postgres` if not specified).

                      Fields `script` and `scriptFrom` are mutually exclusive and only one of them is required.
                    properties:
                      name:
                        type: string
                        description: |
                          Name of the script. Must be unique across this SGCluster.
                      database:
                        type: string
                        description: |
                          Database where the script is executed. Defaults to the `postgres` database, if not specified.
                      script:
                        type: string
                        description: |
                          Raw SQL script to execute. This field is mutually exclusive with `scriptFrom` field.
                      scriptFrom:
                        type: object
                        description: |
                          Reference to either a Kubernetes [Secret](https://kubernetes.io/docs/concepts/configuration/secret/) or a [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) that contains the SQL script to execute. This field is mutually exclusive with `script` field.

                          Fields `secretKeyRef` and `configMapKeyRef` are mutually exclusive, and one of them is required.
                        properties:
                          secretKeyRef:
                            type: object
                            description: |
                              A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) that contains the SQL script to execute. This field is mutually exclusive with `configMapKeyRef` field.
                            properties:
                              name:
                                type: string
                                description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              key:
                                type: string
                                description: The key of the secret to select from. Must be a valid secret key.
                          configMapKeyRef:
                            type: object
                            description: |
                              A [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) reference that contains the SQL script to execute. This field is mutually exclusive with `secretKeyRef` field.
                            properties:
                              name:
                                type: string
                                description: |
                                  The name of the ConfigMap that contains the SQL script to execute.
                              key:
                                type: string
                                description: |
                                  The key name within the ConfigMap that contains the SQL script to execute.
            prometheusAutobind:
              type: boolean
              description: |
                If enabled, a ServiceMonitor is created for each Prometheus instance found in order to collect metrics.
            nonProductionOptions:
              type: object
              properties:
                disableClusterPodAntiAffinity:
                  type: boolean
                  description: |
                    It is a best practice, on non-containerized environments, when running production workloads, to run each database server on a different server (virtual or physical), i.e., not to co-locate more than one database server per host.

                    The same best practice applies to databases on containers. By default, StackGres will not allow to run more than one StackGres pod on a given Kubernetes node. Set this property to true to allow more than one StackGres pod per node.
            distributedLogs:
              type: object
              description: StackGres features a functionality for all pods to send Postgres, Patroni and PgBouncer logs to a central (distributed) location, which is in turn another Postgres database. Logs can then be accessed via SQL interface or from the web UI. This section controls whether to enable this feature or not. If not enabled, logs are send to the pod's standard output.
              properties:
                sgDistributedLogs:
                  type: string
                  description: |
                    Name of the [SGDistributedLogs](https://stackgres.io/doc/latest/reference/crd/sgdistributedlogs) to use for this cluster. It must exist.
          required: ["instances", "postgresVersion", "pods"]
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sgdistributedlogs.stackgres.io
  # annotations:
  #   "helm.sh/hook": crd-install
spec:
  group: stackgres.io
  versions:
    - name: v1beta1
      served: true
      storage: true
  scope: Namespaced
  names:
    kind: SGDistributedLogs
    listKind: SGDistributedLogsList
    plural: sgdistributedlogs
    singular: sgdistributedlogs
    shortNames:
      - sgdil
  validation:
    openAPIV3Schema:
      type: object
      required: ["metadata", "spec"]
      properties:
        metadata:
          type: object
          properties:
            name:
              type: string
              description: |
                Name of the Distributed Logs cluster. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                A Distributed Logs cluster may store logs for zero or more SGClusters.

                The name must be unique across all Distributed Logs and StackGres clusters in the same namespace. The full cluster name includes the namespace in which the cluster is created.
        spec:
          type: object
          properties:
            persistentVolume:
              type: object
              description: Pod's persistent volume configuration
              properties:
                size:
                  type: string
                  pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi|Ti)$'
                  description: |
                    Size of the PersistentVolume set for the pod of the cluster for distributed logs. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
                storageClass:
                  type: string
                  description: |
                    Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
            scheduling:
              type: object
              description: Pod custom scheduling configuration.
              properties:
                nodeSelector:
                  type: object
                  additionalProperties:
                    type: string
                  description: Pod custom node selector.
                tolerations:
                  type: array
                  description: Pod custom node tolerations
                  items:
                    type: object
                    description: Pod custom node toleration
                    properties:
                      key:
                        type: string
                        description: |
                          Key is the taint key that the toleration applies to. Empty means match all taint
                           keys. If the key is empty, operator must be Exists; this combination means to
                           match all values and all keys.
                      operator:
                        type: string
                        description: |
                          Operator represents a key's relationship to the value. Valid operators are Exists
                           and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that
                           a pod can tolerate all taints of a particular category.
                      value:
                        type: string
                        description: |
                          Value is the taint value the toleration matches to. If the operator is Exists, the
                           value should be empty, otherwise just a regular string.
                      effect:
                        type: string
                        description: |
                          Effect indicates the taint effect to match. Empty means match all taint effects.
                           When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      tolerationSeconds:
                        type: integer
                        description: |
                          TolerationSeconds represents the period of time the toleration (which must be of
                           effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                           it is not set, which means tolerate the taint forever (do not evict). Zero and
                           negative values will be treated as 0 (evict immediately) by the system.
            metadata:
              type: object
              description: Metadata information from cluster created resources.
              properties:
                annotations:
                  type: object
                  description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) to be passed to resources created and managed by StackGres.
                  properties:
                    allResources:
                      type: object
                      description: Annotations to attach to any resource created or managed by StackGres.
                      additionalProperties:
                        type: string
                    pods:
                      type: object
                      description: Annotations to attach to pods created or managed by StackGres.
                      additionalProperties:
                        type: string
                    services:
                      type: object
                      description: Annotations to attach to services created or managed by StackGres.
                      additionalProperties:
                        type: string
            nonProductionOptions:
              type: object
              properties:
                disableClusterPodAntiAffinity:
                  type: boolean
                  description: |
                    It is a best practice, on non-containerized environments, when running production workloads, to run each database server on a different server (virtual or physical), i.e., not to co-locate more than one database server per host.

                    The same best practice applies to databases on containers. By default, StackGres will not allow to run more than one StackGres or Distributed Logs pod on a given Kubernetes node. If set to `true` it will allow more than one StackGres pod per node.
          required: ["persistentVolume"]
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sginstanceprofiles.stackgres.io
spec:
  group: stackgres.io
  versions:
    - name: v1beta1
      served: true
      storage: true
  scope: Namespaced
  names:
    kind: SGInstanceProfile
    listKind: SGInstanceProfileList
    plural: sginstanceprofiles
    singular: sginstanceprofile
    shortNames:
      - sginp
  validation:
    openAPIV3Schema:
      required: ["metadata", "spec"]
      type: object
      properties:
        metadata:
          type: object
          properties:
            name:
              type: string
              description: |
                Name of the Instance Profile. An instance profile represents a ""kind"" of server (CPU and RAM) where you may run StackGres, classified by a given name. The profile may be referenced by zero or more SGClusters, and if so it would be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                The name must be unique across all instance profiles in the same namespace."
        spec:
          type: object
          properties:
            cpu:
              type: string
              pattern: '^[1-9][0-9]*[m]?$'
              description: |
                CPU(s) (cores) used for every instance of a SGCluster. Please note that every StackGres pod contains not only the Patroni+Postgres container, but several other sidecar containers. While the majority of the resources are devoted to the main Postgres container, some CPU is needed for the sidecars.

                The number of cores set is split between all the containers.

                A minimum of 2 cores is recommended.
            memory:
              type: string
              pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
              description: |
                RAM allocated to every instance of a SGCluster. The suffix `Mi` or `Gi` specifies Mebibytes or Gibibytes, respectively. Please note that every StackGres pod contains not only the Patroni+Postgres container, but several other sidecar containers. While the majority of the resources are devoted to the main Postgres container, some RAM is needed for the sidecars.

                The amount of RAM set is split between all the containers.

                A minimum of 2-4Gi is recommended.
          required: ["cpu", "memory"]
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sgpoolconfigs.stackgres.io
spec:
  group: stackgres.io
  versions:
    - name: v1beta1
      served: true
      storage: true
  scope: Namespaced
  names:
    kind: SGPoolingConfig
    listKind: SGPoolingConfigList
    plural: sgpoolconfigs
    singular: sgpoolconfig
    shortNames:
      - sgpoc
  validation:
    openAPIV3Schema:
      type: object
      required: ["metadata", "spec"]
      properties:
        metadata:
          type: object
          properties:
            name:
              type: string
              description: |
                Name of the Connection Pooling Configuration. The configuration may be referenced by zero or more SGClusters, and if so it would be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                The name must be unique across all Connection Pooling configurations in the same namespace.
        spec:
          type: object
          properties:
            pgBouncer:
              type: object
              description: |
                Connection pooling configuration based on PgBouncer.
              properties:
                pgbouncer.ini:
                  type: object
                  additionalProperties:
                    type: string
                  description: |
                    The `pgbouncer.ini` parameters the configuration contains, represented as an object where the keys are valid names for the `pgbouncer.ini` configuration file parameters.

                    Check [pgbouncer configuration](https://www.pgbouncer.org/config.html) for more information about supported parameters.
        status:
          type: object
          properties:
            pgBouncer:
              type: object
              description: |
                Connection pooling configuration status based on PgBouncer.
              properties:
                defaultParameters:
                  type: array
                  description: |
                    List of parameters which are set to theirs default value.
                  items:
                    type: string
                    description: |
                      Name of a parameter that is set to his default value.
              required: ["defaultParameters"]
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sgpgconfigs.stackgres.io
spec:
  group: stackgres.io
  versions:
    - name: v1beta1
      served: true
      storage: true
  scope: Namespaced
  names:
    kind: SGPostgresConfig
    listKind: SGPostgresConfigList
    plural: sgpgconfigs
    singular: sgpgconfig
    shortNames:
      - sgpgc
  validation:
    openAPIV3Schema:
      type: object
      required: ["metadata", "spec"]
      properties:
        metadata:
          type: object
          properties:
            name:
              type: string
              description: |
                Name of the Postgres Configuration. The configuration may be referenced by zero or more SGClusters, and if so it would be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                The name must be unique across all Postgres configurations in the same namespace.
        spec:
          type: object
          properties:
            postgresVersion:
              type: string
              description: |
                The **major** Postgres version the configuration is for. Postgres major versions contain one number starting with version 10 (`10`, `11`, `12`, etc), and two numbers separated by a dot for previous versions (`9.6`, `9.5`, etc).

                Note that Postgres maintains full compatibility across minor versions, and hence a configuration for a given major version will work for any minor version of that same major version.

                Check [StackGres component versions](https://stackgres.io/doc/latest/intro/versions) to see the Postgres versions supported by this version of StackGres.
            postgresql.conf:
              type: object
              additionalProperties:
                type: string
              description: |
                The `postgresql.conf` parameters the configuration contains, represented as an object where the keys are valid names for the `postgresql.conf` configuration file parameters of the given `postgresVersion`. You may check [postgresqlco.nf](https://postgresqlco.nf) as a reference on how to tune and find the valid parameters for a given major version.
          required: ["postgresVersion", "postgresql.conf"]
        status:
          type: object
          properties:
            defaultParameters:
              type: array
              description: |
                List of parameters which are set to their default value.
              items:
                type: string
                description: |
                  Name of a parameter that is set to his default value.
          required: ["defaultParameters"]
---
---
# Source: stackgres-operator/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stackgres-operator
  namespace: stackgres
---
# Source: stackgres-operator/templates/webapi-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stackgres-restapi
  namespace: stackgres
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
---
# Source: stackgres-operator/templates/webapi-authentication-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: stackgres-restapi
  namespace: stackgres
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
    api.stackgres.io/auth: user
type: Opaque
data:
  k8sUsername: "YWRtaW4="
  password: "ZGQ3MDkxNTk1MjAwNWMwNTBlZjRlY2Y0ZGMwOTJhODcyNzY4ZWVhYmMyN2I2NzQ2MTNkNWJjZTBlZWI0YjE3ZQ=="
  clearPassword: "WHN2Y1JrejNKc1dNNjlVZ2htMk5HYUlEZzFXRXZJSDRxUDZtczBUQw=="
---
# Source: stackgres-operator/templates/grafana-dashboard-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: stackgres-operator-grafana-dashboard
  namespace: stackgres
data:
  grafana-dashboard.json: |
    {
      "__inputs": [
        {
          "name": "DS_PROMETHEUS",
          "label": "Prometheus",
          "description": "",
          "type": "datasource",
          "pluginId": "prometheus",
          "pluginName": "Prometheus"
        }
      ],
      "__requires": [
        {
          "type": "grafana",
          "id": "grafana",
          "name": "Grafana",
          "version": "6.7.3"
        },
        {
          "type": "panel",
          "id": "graph",
          "name": "Graph",
          "version": ""
        },
        {
          "type": "datasource",
          "id": "prometheus",
          "name": "Prometheus",
          "version": "1.0.0"
        },
        {
          "type": "panel",
          "id": "singlestat",
          "name": "Singlestat",
          "version": ""
        }
      ],
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "description": "This dashboard works with StackGres",
      "editable": true,
      "gnetId": false,
      "graphTooltip": 0,
      "id": null,
      "links": [],
      "panels": [
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 211,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 1
              },
              "hiddenSeries": false,
              "id": 213,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_pools_cl_active{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Active Clients",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 1
              },
              "hiddenSeries": false,
              "id": 214,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "hideEmpty": false,
                "hideZero": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_pools_cl_waiting{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Waiting Clients",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 9
              },
              "hiddenSeries": false,
              "id": 215,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "hideEmpty": false,
                "hideZero": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_pools_sv_active{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Server Active",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 9
              },
              "hiddenSeries": false,
              "id": 216,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "hideEmpty": false,
                "hideZero": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_pools_sv_idle{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Server Idle",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 17
              },
              "hiddenSeries": false,
              "id": 217,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "hideEmpty": false,
                "hideZero": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_stats_avg_xact_time{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}} - XACT",
                  "refId": "A"
                },
                {
                  "expr": "pgbouncer_show_stats_avg_query_time{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}} - QUERY",
                  "refId": "B"
                },
                {
                  "expr": "pgbouncer_show_stats_avg_wait_time{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}} - WAIT",
                  "refId": "C"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Average Time",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "µs",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "µs",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 17
              },
              "hiddenSeries": false,
              "id": 218,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": false,
                "hideZero": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_stats_avg_recv{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}} - RECV",
                  "refId": "A"
                },
                {
                  "expr": "pgbouncer_show_stats_avg_query_time{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}} - SENT",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Average traffic",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Connection Pooling",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 1
          },
          "id": 190,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 2
              },
              "hiddenSeries": false,
              "id": 192,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_transactions_commit{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "COMMIT",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_transactions_rollback{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "ROLLBACK",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Transactions ( 5min rate )",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": "",
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 2
              },
              "hiddenSeries": false,
              "id": 184,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_statements_update{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "UPDATE",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_statements_insert{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "INSERT",
                  "refId": "B"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_statements_delete{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "DELETE",
                  "refId": "C"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_statements_select{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "SELECT",
                  "refId": "D"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_statements_other{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "OTHER",
                  "refId": "E"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "SQL statements ( 5min rate )",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Transactions",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 2
          },
          "id": 160,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 24,
                "x": 0,
                "y": 35
              },
              "hiddenSeries": false,
              "id": 164,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_messages_backend{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "BACKEND",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_messages_frontend{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "FRONTEND",
                  "refId": "B"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_messages_unknown{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "UNKNOWN",
                  "refId": "C"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Messages ( 5min rate )",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 43
              },
              "hiddenSeries": false,
              "id": 146,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_errors_fatal{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "FATAL",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_errors_error{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "ERROR",
                  "refId": "B"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_errors_unknown{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "UNKNOWN",
                  "refId": "C"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_errors_panic{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "PANIC",
                  "refId": "D"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "ERROR messages ( 5min rate )",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 43
              },
              "hiddenSeries": false,
              "id": 170,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_unknown{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "UNKNOWN",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_notice{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "NOTICE",
                  "refId": "B"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_warning{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "WARNING",
                  "refId": "C"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_info{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "INFO",
                  "refId": "D"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_log{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "LOG",
                  "refId": "E"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_debug{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "DEBUG",
                  "refId": "F"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "NOTICE ( 5min rate )",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Messages",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 3
          },
          "id": 152,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 4
              },
              "hiddenSeries": false,
              "id": 154,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_sessions{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "namespace: {{namespace}}, pod: {{pod}} ",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Successful logins",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 4
              },
              "hiddenSeries": false,
              "id": 156,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_sessions_encrypted{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "namespace: {{namespace}}, pod: {{pod}} - ENCRYPTED",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_sessions_unencrypted{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "namespace: {{namespace}}, pod: {{pod}} - UNENCRYPTED",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Sessions Encryption",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Sessions",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 4
          },
          "id": 34,
          "panels": [
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": true,
              "colors": [
                "#299c46",
                "#7eb26d",
                "#d44a3a"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "none",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 0,
                "y": 53
              },
              "id": 36,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "pg_static{release=\"$release\", instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "instant": true,
                  "intervalFactor": 1,
                  "legendFormat": "{{short_version}}",
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "title": "Version",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "name"
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#d44a3a"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "description": "start time of the process",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "dateTimeFromNow",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 4,
                "y": 53
              },
              "id": 28,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "80%",
              "prefix": "",
              "prefixFontSize": "80%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "process_start_time_seconds{release=\"$release\", instance=~\"${instance}:9187\"} * 1000",
                  "format": "time_series",
                  "intervalFactor": 2,
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "title": "Start Time",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "avg"
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "decbytes",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 8,
                "y": 53
              },
              "height": "200px",
              "id": 10,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "SUM(pg_stat_database_tup_fetched{datname=~\"$datname\", instance=~\"${instance}:9187\"})",
                  "format": "time_series",
                  "intervalFactor": 2,
                  "refId": "A",
                  "step": 4
                }
              ],
              "thresholds": "",
              "title": "Current fetch data",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "current"
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "decbytes",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 12,
                "y": 53
              },
              "height": "200px",
              "id": 11,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "SUM(pg_stat_database_tup_inserted{release=\"$release\", datname=~\"$datname\", instance=~\"${instance}:9187\"})",
                  "format": "time_series",
                  "intervalFactor": 2,
                  "refId": "A",
                  "step": 4
                }
              ],
              "thresholds": "",
              "title": "Current insert data",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "current"
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "decbytes",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 16,
                "y": 53
              },
              "height": "200px",
              "id": 12,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "SUM(pg_stat_database_tup_updated{datname=~\"$datname\", instance=~\"${instance}:9187\"})",
                  "format": "time_series",
                  "intervalFactor": 2,
                  "refId": "A",
                  "step": 4
                }
              ],
              "thresholds": "",
              "title": "Current update data",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "current"
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#d44a3a"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "none",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 20,
                "y": 53
              },
              "id": 38,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "pg_settings_max_connections{release=\"$release\", instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "title": "Max Connections",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "avg"
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "description": "Average user and system CPU time spent in seconds.",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 55
              },
              "hiddenSeries": false,
              "id": 22,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "avg(rate(process_cpu_seconds_total{release=\"$release\", instance=~\"${instance}:9187\"}[5m]) * 1000)",
                  "format": "time_series",
                  "intervalFactor": 2,
                  "legendFormat": "CPU Time",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Average CPU Usage",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "s",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "description": "Virtual and Resident memory size in bytes, averages over 5 min interval",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 8,
                "y": 55
              },
              "hiddenSeries": false,
              "id": 24,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "avg(rate(process_resident_memory_bytes{release=\"$release\", instance=~\"${instance}:9187\"}[5m]))",
                  "format": "time_series",
                  "intervalFactor": 2,
                  "legendFormat": "Resident Mem",
                  "refId": "A"
                },
                {
                  "expr": "avg(rate(process_virtual_memory_bytes{release=\"$release\", instance=~\"${instance}:9187\"}[5m]))",
                  "format": "time_series",
                  "intervalFactor": 2,
                  "legendFormat": "Virtual Mem",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Average Memory Usage",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "decbytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "description": "Number of open file descriptors",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 16,
                "y": 55
              },
              "hiddenSeries": false,
              "id": 26,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "process_open_fds{release=\"$release\", instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Open FD",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Open File Descriptors",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": null,
              "fill": 0,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 12,
                "x": 0,
                "y": 62
              },
              "hiddenSeries": false,
              "id": 228,
              "legend": {
                "sort": "current",
                "sortDesc": false,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "node_filesystem_avail_bytes{instance=~\"${instance}:9187\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "{{mountpoint}} Available",
                  "refId": "A"
                },
                {
                  "expr": "node_filesystem_size_bytes{instance=~\"${instance}:9187\",fstype!=\"\"}",
                  "format": "time_series",
                  "instant": false,
                  "interval": "",
                  "legendFormat": "{{mountpoint}} Total",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Total / Available Disk Size",
              "tooltip": {
                "shared": false,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "percent",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": false
                }
              ],
              "yaxis": {
                "align": true,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": null,
              "fill": 0,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 12,
                "x": 12,
                "y": 62
              },
              "hiddenSeries": false,
              "id": 230,
              "legend": {
                "sort": "current",
                "sortDesc": false,
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "node_filesystem_files_free{instance=~\"${instance}:9187\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "{{mountpoint}} inodes free",
                  "refId": "A"
                },
                {
                  "expr": "node_filesystem_files{instance=~\"${instance}:9187\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "{{mountpoint}} inodes",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Total / Available Disk inodes",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "General Counters, Disks, CPU, Memory and File Descriptor Stats",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 5
          },
          "id": 32,
          "panels": [
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#d44a3a"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "bytes",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 0,
                "y": 54
              },
              "id": 40,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "pg_settings_shared_buffers_bytes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "title": "Shared Buffers",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "current"
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#d44a3a"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "bytes",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 3,
                "y": 54
              },
              "id": 42,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "pg_settings_effective_cache_size_bytes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "title": "Effective Cache",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "current"
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#d44a3a"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "bytes",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 6,
                "y": 54
              },
              "id": 44,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "pg_settings_maintenance_work_mem_bytes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "title": "Maintenance Work Mem",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "current"
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#d44a3a"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "bytes",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 9,
                "y": 54
              },
              "id": 46,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "pg_settings_work_mem_bytes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "title": "Work Mem",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "current"
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#d44a3a"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 1,
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "bytes",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 12,
                "y": 54
              },
              "id": 48,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "pg_settings_max_wal_size_bytes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "title": "Max WAL Size",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "current"
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#d44a3a"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "none",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 15,
                "y": 54
              },
              "id": 50,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "pg_settings_random_page_cost{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "title": "Random Page Cost",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "current"
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#d44a3a"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "none",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 3,
                "w": 2,
                "x": 18,
                "y": 54
              },
              "id": 52,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "pg_settings_seq_page_cost{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "title": "Seq Page Cost",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "current"
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#d44a3a"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "none",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 3,
                "w": 2,
                "x": 20,
                "y": 54
              },
              "id": 54,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "pg_settings_max_worker_processes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "title": "Max Worker Processes",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "avg"
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#d44a3a"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "none",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 3,
                "w": 2,
                "x": 22,
                "y": 54
              },
              "id": 56,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "pg_settings_max_parallel_workers{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "title": "Max Parallel Workers",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "current"
            }
          ],
          "title": "Settings",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 6
          },
          "id": 30,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": [],
                  "mappings": [],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  }
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 55
              },
              "hiddenSeries": false,
              "id": 1,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "connected",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_stat_activity_count{datname=~\"$datname\", instance=~\"${instance}:9187\", state=\"active\"} !=0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}, State: {{state}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Active sessions",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 8,
                "y": 55
              },
              "hiddenSeries": false,
              "id": 60,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_xact_commit{instance=~\"${instance}:9187\", datname=~\"$datname\"}[5m])",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "Database: {{datname}} - COMMIT",
                  "refId": "A"
                },
                {
                  "expr": "rate(pg_stat_database_xact_rollback{instance=~\"${instance}:9187\", datname=~\"$datname\"}[5m])",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "Database: {{datname}} - ROLLBACK",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Transactions",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 16,
                "y": 55
              },
              "hiddenSeries": false,
              "id": 8,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sideWidth": null,
                "sort": "current",
                "sortDesc": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_tup_updated{datname=~\"$datname\", instance=~\"${instance}:9187\"}[5m]) != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Updated data (Rows)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 62
              },
              "hiddenSeries": false,
              "id": 5,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_tup_fetched{datname=~\"$datname\", instance=~\"${instance}:9187\"}[5m]) != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Fetched data (Rows)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 8,
                "y": 62
              },
              "hiddenSeries": false,
              "id": 6,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sideWidth": null,
                "sort": "current",
                "sortDesc": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_tup_inserted{datname=~\"$datname\", instance=~\"${instance}:9187\"}[5m]) != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Inserted data",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 2,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 2,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 16,
                "y": 62
              },
              "hiddenSeries": false,
              "id": 3,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_locks_count{datname=~\"$datname\", instance=~\"${instance}:9187\", mode=~\"$mode\"} != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}, Type:{{mode}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Lock tables",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": "0",
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 69
              },
              "hiddenSeries": false,
              "id": 14,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "total",
                "sortDesc": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_tup_returned{datname=~\"$datname\", instance=~\"${instance}:9187\"}[5m]) != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Returned data (Rows)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 8,
                "y": 69
              },
              "hiddenSeries": false,
              "id": 4,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_stat_activity_count{datname=~\"$datname\", instance=~\"${instance}:9187\", state=~\"idle|idle in transaction|idle in transaction (aborted)\"}",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}, State: {{state}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Idle sessions",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": "0",
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 16,
                "y": 69
              },
              "hiddenSeries": false,
              "id": 7,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_tup_deleted{datname=~\"$datname\", instance=~\"${instance}:9187\"}[5m]) != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Deleted data (Rows)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 76
              },
              "hiddenSeries": false,
              "id": 62,
              "legend": {
                "sort": "current",
                "sortDesc": false,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_stat_database_blks_hit{instance=~\"${instance}:9187\", datname=~\"$datname\"} / (pg_stat_database_blks_read{instance=~\"${instance}:9187\", datname=~\"$datname\"} + pg_stat_database_blks_hit{instance=~\"${instance}:9187\", datname=~\"$datname\"})",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "Database: {{ datname }}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Cache Hit Rate",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 2,
                  "format": "percentunit",
                  "label": "",
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 8,
                "y": 76
              },
              "hiddenSeries": false,
              "id": 64,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": true,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_bgwriter_buffers_backend{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "buffers_backend",
                  "refId": "A"
                },
                {
                  "expr": "rate(pg_stat_bgwriter_buffers_alloc{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "buffers_alloc",
                  "refId": "B"
                },
                {
                  "expr": "rate(pg_stat_bgwriter_buffers_backend_fsync{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "backend_fsync",
                  "refId": "C"
                },
                {
                  "expr": "rate(pg_stat_bgwriter_buffers_checkpoint{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "buffers_checkpoint",
                  "refId": "D"
                },
                {
                  "expr": "rate(pg_stat_bgwriter_buffers_clean{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "buffers_clean",
                  "refId": "E"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Buffers (bgwriter)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 16,
                "y": 76
              },
              "hiddenSeries": false,
              "id": 66,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_conflicts{instance=~\"${instance}:9187\", datname=~\"$datname\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "Database {{datname}} conflicts",
                  "refId": "B"
                },
                {
                  "expr": "rate(pg_stat_database_deadlocks{instance=~\"${instance}:9187\", datname=~\"$datname\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "Database {{datname}} deadlocks",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Conflicts/Deadlocks",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": "0",
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "description": "Total amount of data written to temporary files by queries in this database. All temporary files are counted, regardless of why the temporary file was created, and regardless of the log_temp_files setting.",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 83
              },
              "hiddenSeries": false,
              "id": 68,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_temp_bytes{instance=~\"${instance}:9187\", datname=~\"$datname\"}[5m])",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Temp File (Bytes)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": "0",
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 16,
                "x": 8,
                "y": 83
              },
              "hiddenSeries": false,
              "id": 70,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_bgwriter_checkpoint_write_time{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "write_time - Total amount of time that has been spent in the portion of checkpoint processing where files are written to disk.",
                  "refId": "B"
                },
                {
                  "expr": "rate(pg_stat_bgwriter_checkpoint_sync_time{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "sync_time - Total amount of time that has been spent in the portion of checkpoint processing where files are synchronized to disk.",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Checkpoint Stats",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "ms",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Database Stats",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 7
          },
          "id": 92,
          "panels": [
            {
              "aliasColors": {},
              "bars": true,
              "cacheTimeout": null,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {
                    "align": null
                  },
                  "links": [],
                  "mappings": [],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  }
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 17,
                "x": 0,
                "y": 40
              },
              "hiddenSeries": false,
              "id": 96,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": false,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_database_size{instance=~\"${instance}:9187\", datname!~\"template0|template1\"}",
                  "instant": false,
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "{{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Database Size",
              "tooltip": {
                "shared": false,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "series",
                "name": null,
                "show": true,
                "values": [
                  "current"
                ]
              },
              "yaxes": [
                {
                  "decimals": 1,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 1,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "columns": [
                {
                  "text": "Current",
                  "value": "current"
                }
              ],
              "datasource": null,
              "fontSize": "100%",
              "gridPos": {
                "h": 4,
                "w": 4,
                "x": 17,
                "y": 40
              },
              "id": 234,
              "pageSize": 100,
              "showHeader": true,
              "sort": {
                "col": 0,
                "desc": true
              },
              "styles": [
                {
                  "alias": "",
                  "align": "left",
                  "colorMode": null,
                  "colors": [
                    "rgba(245, 54, 54, 0.9)",
                    "rgba(237, 129, 40, 0.89)",
                    "rgba(50, 172, 45, 0.97)"
                  ],
                  "dateFormat": "YYYY-MM-DD HH:mm:ss",
                  "decimals": 2,
                  "mappingType": 1,
                  "pattern": "Current",
                  "thresholds": [],
                  "type": "number",
                  "unit": "bytes"
                }
              ],
              "targets": [
                {
                  "expr": "node_filesystem_avail_bytes{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "Available",
                  "refId": "A"
                },
                {
                  "expr": "node_filesystem_size_bytes{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "Total",
                  "refId": "B"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Database Disk Size",
              "transform": "timeseries_aggregations",
              "type": "table"
            },
            {
              "datasource": null,
              "gridPos": {
                "h": 8,
                "w": 3,
                "x": 21,
                "y": 40
              },
              "id": 232,
              "options": {
                "fieldOptions": {
                  "calcs": [
                    "last"
                  ],
                  "defaults": {
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "orange",
                          "value": 75
                        },
                        {
                          "color": "red",
                          "value": 90
                        }
                      ]
                    },
                    "title": "",
                    "unit": "percent"
                  },
                  "overrides": [],
                  "values": false
                },
                "orientation": "auto",
                "showThresholdLabels": false,
                "showThresholdMarkers": true
              },
              "pluginVersion": "6.7.3",
              "targets": [
                {
                  "expr": "(1.0 - node_filesystem_avail_bytes{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"} / node_filesystem_size_bytes{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}) * 100",
                  "interval": "",
                  "legendFormat": "Size",
                  "refId": "A"
                },
                {
                  "expr": "(1.0 - node_filesystem_files_free{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"} / node_filesystem_files{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}) * 100",
                  "interval": "",
                  "legendFormat": "inodes",
                  "refId": "B"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Database Disk Usage",
              "type": "gauge"
            },
            {
              "columns": [
                {
                  "text": "Current",
                  "value": "current"
                }
              ],
              "datasource": null,
              "fontSize": "100%",
              "gridPos": {
                "h": 4,
                "w": 4,
                "x": 17,
                "y": 44
              },
              "id": 235,
              "pageSize": 100,
              "showHeader": true,
              "sort": {
                "col": 0,
                "desc": true
              },
              "styles": [
                {
                  "alias": "",
                  "align": "left",
                  "colorMode": null,
                  "colors": [
                    "rgba(245, 54, 54, 0.9)",
                    "rgba(237, 129, 40, 0.89)",
                    "rgba(50, 172, 45, 0.97)"
                  ],
                  "dateFormat": "YYYY-MM-DD HH:mm:ss",
                  "decimals": 2,
                  "mappingType": 1,
                  "pattern": "Current",
                  "thresholds": [],
                  "type": "number",
                  "unit": "short"
                }
              ],
              "targets": [
                {
                  "expr": "node_filesystem_files{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "Total",
                  "refId": "C"
                },
                {
                  "expr": "node_filesystem_files_free{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "Free",
                  "refId": "D"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Database Disk inodes",
              "transform": "timeseries_aggregations",
              "type": "table"
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {
                    "align": null
                  },
                  "mappings": [],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  }
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 11,
                "w": 24,
                "x": 0,
                "y": 48
              },
              "hiddenSeries": false,
              "id": 195,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "sort_desc(topk(10, pg_total_relation_size_bytes{instance=~\"${instance}:9187\"}))",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Top 10 bigger tables",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Database Size",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 8
          },
          "id": 116,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 41
              },
              "hiddenSeries": false,
              "id": 122,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, sum by (relname, instance,datname,schemaname) (rate(pg_stat_user_tables_idx_scan{instance=~\"${instance}:9187\"}[5m])) + sum by (relname, instance,datname,schemaname) (rate(pg_stat_user_tables_seq_scan{instance=~\"${instance}:9187\"}[5m])))",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "More Consulted Tables (Top 10)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 41
              },
              "hiddenSeries": false,
              "id": 124,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, rate(pg_stat_user_tables_n_tup_ins{instance=~\"${instance}:9187\"}[5m]))",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Table with more inserts (Top 10)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 49
              },
              "hiddenSeries": false,
              "id": 128,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, rate(pg_stat_user_tables_n_tup_upd{instance=~\"${instance}:9187\"}[5m]))",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Tables with more UPDATE operations (Top 10)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": "",
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 49
              },
              "hiddenSeries": false,
              "id": 126,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, rate(pg_stat_user_tables_n_tup_del{instance=~\"${instance}:9187\"}[5m]))",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Tables with more DELETE operations (Top 10)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Usage Stats",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 9
          },
          "id": 130,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 42
              },
              "hiddenSeries": false,
              "id": 205,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20, pg_index_bloat_size{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schema_name}}, Table: {{tblname}}, Index: {{idxname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Index bloat Size (Top 20)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "description": "",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 42
              },
              "hiddenSeries": false,
              "id": 207,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20, pg_index_real_size{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schema_name}}, Table: {{tblname}}, Index: {{idxname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Index Size (Top 20)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 24,
                "x": 0,
                "y": 50
              },
              "hiddenSeries": false,
              "id": 209,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, pg_index_bloat_ratio{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schema_name}}, Table: {{tblname}}, Index: {{idxname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Index Bloat Ratio (Top 20)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Index Bloat",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 10
          },
          "id": 104,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 43
              },
              "hiddenSeries": false,
              "id": 106,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, rate(pg_stat_user_tables_n_dead_tup{instance=~\"${instance}:9187\"}[5m])*300)",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Dead tuples (top 10)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 43
              },
              "hiddenSeries": false,
              "id": 199,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20, pg_table_bloat_bloat_ratio{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema:{{schemaname}}, Table: {{tablename}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Table Bloat Ratio (top 20)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 51
              },
              "hiddenSeries": false,
              "id": 201,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20, pg_table_bloat_bloat_size{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{tablename}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Table Bloat Size",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 51
              },
              "hiddenSeries": false,
              "id": 203,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20, pg_table_bloat_extra_size{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{tablename}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Table pages Extra size (Top 20)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Table Bloat",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 11
          },
          "id": 88,
          "panels": [
            {
              "cacheTimeout": null,
              "colorBackground": true,
              "colorPrefix": false,
              "colorValue": false,
              "colors": [
                "#1F60C4",
                "rgba(237, 129, 40, 0.89)",
                "#d44a3a"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "none",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 0,
                "y": 44
              },
              "id": 102,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false,
                "ymax": null,
                "ymin": null
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "count(pg_replication_status_lag_size{instance=~\"${instance}:9187\", state=\"streaming\"})",
                  "interval": "",
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "timeFrom": null,
              "timeShift": null,
              "title": "Active Replica Nodes",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "0",
                  "value": "null"
                }
              ],
              "valueName": "current"
            },
            {
              "cacheTimeout": null,
              "colorBackground": true,
              "colorPrefix": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#d44a3a"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "none",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 3,
                "y": 44
              },
              "id": 198,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false,
                "ymax": null,
                "ymin": null
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "count(pg_replication_slots_active{instance=~\"${instance}:9187\"}==1)",
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "timeFrom": null,
              "timeShift": null,
              "title": "Active Replication Slots",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "0",
                  "value": "null"
                }
              ],
              "valueName": "avg"
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#d44a3a"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "none",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 3,
                "w": 6,
                "x": 6,
                "y": 44
              },
              "id": 98,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false,
                "ymax": null,
                "ymin": null
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "pg_wal_position_bytes{instance=~\"${instance}:9187\"}",
                  "refId": "A"
                }
              ],
              "thresholds": "",
              "timeFrom": null,
              "timeShift": null,
              "title": "Current LSN",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "N/A",
                  "value": "null"
                }
              ],
              "valueName": "avg"
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 14,
                "w": 12,
                "x": 12,
                "y": 44
              },
              "hiddenSeries": false,
              "id": 196,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": false
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_replication_status_lag_size{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Replica: {{application_name}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Replication lag size",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#C4162A"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "none",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 3,
                "w": 6,
                "x": 0,
                "y": 47
              },
              "id": 197,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false,
                "ymax": null,
                "ymin": null
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "count(pg_replication_status_lag_size{instance=~\"${instance}:9187\", state!=\"streaming\"})",
                  "format": "time_series",
                  "interval": "",
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "thresholds": "0,1",
              "timeFrom": null,
              "timeShift": null,
              "title": "Replica with no streaming status",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "0",
                  "value": "null"
                }
              ],
              "valueName": "current"
            },
            {
              "cacheTimeout": null,
              "colorBackground": false,
              "colorValue": false,
              "colors": [
                "#299c46",
                "rgba(237, 129, 40, 0.89)",
                "#C4162A"
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {}
                },
                "overrides": []
              },
              "format": "none",
              "gauge": {
                "maxValue": 100,
                "minValue": 0,
                "show": false,
                "thresholdLabels": false,
                "thresholdMarkers": true
              },
              "gridPos": {
                "h": 3,
                "w": 6,
                "x": 6,
                "y": 47
              },
              "id": 100,
              "interval": null,
              "links": [],
              "mappingType": 1,
              "mappingTypes": [
                {
                  "name": "value to text",
                  "value": 1
                },
                {
                  "name": "range to text",
                  "value": 2
                }
              ],
              "maxDataPoints": 100,
              "nullPointMode": "connected",
              "nullText": null,
              "postfix": "",
              "postfixFontSize": "50%",
              "prefix": "",
              "prefixFontSize": "50%",
              "rangeMaps": [
                {
                  "from": "null",
                  "text": "N/A",
                  "to": "null"
                }
              ],
              "sparkline": {
                "fillColor": "rgba(31, 118, 189, 0.18)",
                "full": false,
                "lineColor": "rgb(31, 120, 193)",
                "show": false,
                "ymax": null,
                "ymin": null
              },
              "tableColumn": "",
              "targets": [
                {
                  "expr": "count(pg_replication_slots_active{instance=~\"${instance}:9187\"}==0)",
                  "format": "time_series",
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "thresholds": "0,1",
              "timeFrom": null,
              "timeShift": null,
              "title": "Inactive Replication Slots",
              "type": "singlestat",
              "valueFontSize": "80%",
              "valueMaps": [
                {
                  "op": "=",
                  "text": "0",
                  "value": "null"
                }
              ],
              "valueName": "current"
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 50
              },
              "hiddenSeries": false,
              "id": 90,
              "legend": {
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": false
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_replication_lag{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Replication lag",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Replication lag (seconds)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "s",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Replication",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 12
          },
          "id": 80,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 24,
                "x": 0,
                "y": 45
              },
              "hiddenSeries": false,
              "id": 82,
              "legend": {
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": false
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_archiver_pending_wal_count{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "# of WALs to be archived",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "No. of pending WALs files to be archived",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Archiving",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 13
          },
          "id": 72,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 0,
                "y": 46
              },
              "hiddenSeries": false,
              "id": 74,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_slow_queries{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Slow Queries Count",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 8,
                "y": 46
              },
              "hiddenSeries": false,
              "id": 84,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_long_running_transactions_transactions{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Number of long running transactions",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 16,
                "y": 46
              },
              "hiddenSeries": false,
              "id": 86,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_long_running_transactions_age_in_seconds{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Long running transaction age(sec)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "s",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 0,
                "y": 54
              },
              "hiddenSeries": false,
              "id": 78,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_oldest_blocked_age_seconds{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Queries largest  time lock",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "s",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 8,
                "y": 54
              },
              "hiddenSeries": false,
              "id": 76,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_blocked_queries{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Table: {{table}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Blocked Queries Count",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 16,
                "y": 54
              },
              "hiddenSeries": false,
              "id": 114,
              "legend": {
                "sort": "current",
                "sortDesc": true,
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": false
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "7.1.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_stuck_idle_in_transaction_queries{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Queries that are stuck being idle in transactions",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": "",
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Queries",
          "type": "row"
        }
      ],
      "refresh": "10s",
      "schemaVersion": 22,
      "style": "dark",
      "tags": [
        "postgres",
        "db",
        "stats"
      ],
      "templating": {
        "list": [
          {
            "auto": true,
            "auto_count": 200,
            "auto_min": "1s",
            "current": {
              "selected": false,
              "text": "auto",
              "value": "$__auto_interval_interval"
            },
            "hide": 0,
            "label": "Interval",
            "name": "interval",
            "options": [
              {
                "selected": true,
                "text": "auto",
                "value": "$__auto_interval_interval"
              },
              {
                "selected": false,
                "text": "1s",
                "value": "1s"
              },
              {
                "selected": false,
                "text": "5s",
                "value": "5s"
              },
              {
                "selected": false,
                "text": "1m",
                "value": "1m"
              },
              {
                "selected": false,
                "text": "5m",
                "value": "5m"
              },
              {
                "selected": false,
                "text": "1h",
                "value": "1h"
              },
              {
                "selected": false,
                "text": "6h",
                "value": "6h"
              },
              {
                "selected": false,
                "text": "1d",
                "value": "1d"
              }
            ],
            "query": "1s,5s,1m,5m,1h,6h,1d",
            "refresh": 2,
            "skipUrlSync": false,
            "type": "interval"
          },
          {
            "allValue": null,
            "current": {
              "isNone": true,
              "selected": false,
              "text": "None",
              "value": ""
            },
            "datasource": "${DS_PROMETHEUS}",
            "definition": "",
            "hide": 0,
            "includeAll": false,
            "index": -1,
            "label": "Namespace",
            "multi": false,
            "name": "namespace",
            "options": [],
            "query": "query_result(pg_exporter_last_scrape_duration_seconds)",
            "refresh": 2,
            "regex": "/.*kubernetes_namespace=\"([^\"]+).*/",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "isNone": true,
              "selected": false,
              "text": "None",
              "value": ""
            },
            "datasource": "${DS_PROMETHEUS}",
            "definition": "",
            "hide": 0,
            "includeAll": false,
            "index": -1,
            "label": "Release",
            "multi": false,
            "name": "release",
            "options": [],
            "query": "query_result(pg_exporter_last_scrape_duration_seconds{kubernetes_namespace=\"$namespace\"})",
            "refresh": 2,
            "regex": "/.*release=\"([^\"]+)/",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "text": "192.168.82.47",
              "value": "192.168.82.47"
            },
            "datasource": "${DS_PROMETHEUS}",
            "definition": "",
            "hide": 0,
            "includeAll": false,
            "index": -1,
            "label": "Instance",
            "multi": false,
            "name": "instance",
            "options": [],
            "query": "query_result(up{release=\"$release\"})",
            "refresh": 1,
            "regex": "/.*instance=\"([^\":]+).*/",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "text": "All",
              "value": [
                "$__all"
              ]
            },
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(datname)",
            "hide": 0,
            "includeAll": true,
            "index": -1,
            "label": "Database",
            "multi": true,
            "name": "datname",
            "options": [],
            "query": "label_values(datname)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "text": "All",
              "value": [
                "$__all"
              ]
            },
            "datasource": "${DS_PROMETHEUS}",
            "definition": "",
            "hide": 0,
            "includeAll": true,
            "index": -1,
            "label": "Lock table",
            "multi": true,
            "name": "mode",
            "options": [],
            "query": "label_values({mode=~\"accessexclusivelock|accesssharelock|exclusivelock|rowexclusivelock|rowsharelock|sharelock|sharerowexclusivelock|shareupdateexclusivelock\"}, mode)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "datasource": "${DS_PROMETHEUS}",
            "filters": [],
            "hide": 0,
            "label": "",
            "name": "Filters",
            "skipUrlSync": false,
            "type": "adhoc"
          },
          {
            "datasource": null,
            "filters": [],
            "hide": 0,
            "label": "",
            "name": "Filters",
            "skipUrlSync": false,
            "type": "adhoc"
          }
        ]
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "",
      "title": "StackGres Dashboard",
      "uid": "000000041",
      "variables": {
        "list": []
      },
      "version": 7
    }
---
# Source: stackgres-operator/templates/webapi-nginx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: stackgres-restapi-nginx
  namespace: stackgres
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
data:
  nginx.conf: |
    pid        /tmp/nginx.pid;
    events{
    }
    http {
        client_body_temp_path /tmp/client_temp;
        proxy_temp_path       /tmp/proxy_temp_path;
        fastcgi_temp_path     /tmp/fastcgi_temp;
        uwsgi_temp_path       /tmp/uwsgi_temp;
        scgi_temp_path        /tmp/scgi_temp;

        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;

        keepalive_timeout  65;

        include /etc/nginx/conf.d/*.conf;
    }
  stackgres-operator.template: |
    server {
      set $grafana_embedded '${GRAFANA_EMBEDDED}';

      server_name  localhost;

      listen       9443 ssl;
      ssl_certificate         /etc/operator/certs/server.crt;
      ssl_certificate_key     /etc/operator/certs/root.key;
      root   /usr/share/nginx/html;
      index index.html;

      location /admin/ {
        try_files $uri $uri/index.html /admin/index.html;
      }

      location ~ ^(/|/admin|/admin/)$ {
        return 302 "$scheme://$http_host/admin/index.html";
      }

      location /grafana {
        if ($grafana_embedded != true) {
          return 404;
        }
        add_header Content-Type text/plain;
        return 200 "$scheme://$http_host${GRAFANA_URL_PATH}";
      }

      location ~ ^(/|/stackgres|/stackgres/)$ {
        return 302 "$scheme://$http_host/admin/index.html";
      }

      location ~ ^/stackgres {
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        proxy_pass http://localhost:8080;
      }

      location / {
        if ($grafana_embedded != true) {
          return 404;
        }
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        index index.html index.htm;
        proxy_set_header Authorization "Bearer ${GRAFANA_TOKEN}";
        proxy_hide_header X-Frame-Options;
        proxy_pass "${GRAFANA_SCHEMA}://${GRAFANA_WEB_HOST}";
      }
    }
---
# Source: stackgres-operator/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: stackgres-operator
rules:
- apiGroups: ["", "apps", "extensions", "rbac.authorization.k8s.io", "batch"] # "" indicates the core API group
  resources:
  - pods
  - pods/exec
  - services
  - endpoints
  - persistentvolumeclaims
  - configmaps
  - secrets
  - statefulsets
  - serviceaccounts
  - namespaces
  - roles
  - rolebindings
  - events
  - cronjobs
  - persistentvolumeclaims
  - jobs
  verbs:
  - get
  - list
  - watch
  - update
  - create
  - delete
  - patch
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list"]
- apiGroups: ["apiextensions.k8s.io", "customresourcedefinitions.apiextensions.k8s.io"]
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups: ["stackgres.io"]
  resources:
  - sgclusters
  - sgpgconfigs
  - sginstanceprofiles
  - sgpoolconfigs
  - sgbackupconfigs
  - sgbackups
  - sgdistributedlogs
  verbs:
  - create
  - watch
  - list
  - get
  - update
  - patch
  - delete
- apiGroups: ["monitoring.coreos.com"]
  resources:
  - servicemonitors
  verbs:
  - list
  - get
  - create
  - delete
  - update
  - patch
- apiGroups: ["monitoring.coreos.com"]
  resources:
  - prometheus
  - prometheuses
  - podmonitors
  verbs:
  - list
  - get
---
# Source: stackgres-operator/templates/webapi-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: stackgres-restapi
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - users
  - groups
  - serviceaccount
  verbs:
  - impersonate
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - secrets # Secret Verification authentication
  verbs:
  - get
  - list
---
# Source: stackgres-operator/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stackgres-operator
  namespace: stackgres
subjects:
- kind: ServiceAccount
  name: stackgres-operator
  namespace: stackgres
roleRef:
  kind: ClusterRole
  name: stackgres-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: stackgres-operator/templates/webapi-authorization-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stackgres-restapi-admin
  namespace: stackgres
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
    api.stackgres.io/auth: rolebinding
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: User
  name: admin
---
# Source: stackgres-operator/templates/webapi-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stackgres-restapi
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: stackgres-restapi
  namespace: stackgres
roleRef:
  kind: ClusterRole
  name: stackgres-restapi
  apiGroup: rbac.authorization.k8s.io
---
# Source: stackgres-operator/templates/operator-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: stackgres
  name: stackgres-operator
spec:
  type: ClusterIP
  selector:
    app: stackgres-operator
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: https
---
# Source: stackgres-operator/templates/webapi-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: stackgres
  name: stackgres-restapi
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
spec:
  type: 'LoadBalancer'
  selector:
    app: stackgres-restapi
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: https
---
# Source: stackgres-operator/templates/operator-deployment.yaml
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app: stackgres-operator
    version: "0.9.5"
    group:  stackgres.io
  name: stackgres-operator
  namespace: stackgres
spec:
  replicas: 0
  selector:
    matchLabels:
      app: stackgres-operator
      group:  stackgres.io
  template:
    metadata:
      labels:
        app: stackgres-operator
        group:  stackgres.io
    spec:
      serviceAccountName: stackgres-operator
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: stackgres-operator
        image: "stackgres/operator:0.9.5"
        imagePullPolicy: IfNotPresent
        env:
          - name: OPERATOR_NAME
            value: "stackgres-operator"
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: PROMETHEUS_AUTOBIND
            value: "true"
          - name: OPERATOR_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: AUTHENTICATION_SECRET_NAME
            value: "stackgres-restapi"
        ports:
        - containerPort: 8080
          name: "http"
          protocol: "TCP"
        - containerPort: 8443
          name: "https"
          protocol: "TCP"
        livenessProbe:
          httpGet:
            path: "/health/live"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: "/health/ready"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 2
        volumeMounts:
          - name: operator-certs
            mountPath: /etc/operator/certs
            readOnly: true
      volumes:
        - name: operator-certs
          secret:
            secretName: stackgres-operator-certs
            optional: false
            items:
              - key: root.key
                path: root.key
              - key: server.crt
                path: server.crt
---
# Source: stackgres-operator/templates/webapi-deployment.yaml
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
    app: stackgres-restapi
    version: "0.9.5"
    group:  stackgres.io
  name: stackgres-restapi
  namespace: stackgres
spec:
  replicas: 0
  selector:
    matchLabels:
      app: stackgres-restapi
      group:  stackgres.io
  template:
    metadata:
      labels:
        app: stackgres-restapi
        group:  stackgres.io
    spec:
      serviceAccountName: stackgres-restapi
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
      containers:
      - name: stackgres-restapi
        image: "stackgres/restapi:0.9.5"
        imagePullPolicy: IfNotPresent
        env:
          - name: RESTAPI_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: RESTAPI_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: AUTHENTICATION_SECRET_NAME
            value: "stackgres-restapi"
        ports:
        - containerPort: 8080
          name: "resthttp"
          protocol: "TCP"
        - containerPort: 8443
          name: "resthttps"
          protocol: "TCP"
        livenessProbe:
          httpGet:
            path: "/health/live"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: "/health/ready"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 2
        volumeMounts:
          - name: operator-certs
            mountPath: /etc/operator/certs
            readOnly: true
      - name: stackgres-adminui
        image: 'stackgres/admin-ui:0.9.5'
        imagePullPolicy: 
        env:
          - name: GRAFANA_URL_PATH
            value: "/"
          - name: GRAFANA_SCHEMA
            value: "http"
          - name: GRAFANA_WEB_HOST
            value: "localhost:8080"
          - name: GRAFANA_TOKEN
            value: "unknown"
        args:
          - '/bin/sh'
          - '-ec'
          - |
            envsubst '
              $GRAFANA_EMBEDDED
              $GRAFANA_URL_PATH
              $GRAFANA_SCHEMA
              $GRAFANA_WEB_HOST
              $GRAFANA_TOKEN' \
              < /etc/nginx/template.d/stackgres-operator.template \
              > /etc/nginx/conf.d/stackgres-operator.conf
            exec nginx -g 'daemon off;'
        ports:
        - containerPort: 9443
          name: "https"
          protocol: "TCP"
        volumeMounts:
          - name: operator-certs
            mountPath: /etc/operator/certs
            readOnly: true
          - name: operator-nginx
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            readOnly: true
          - name: operator-nginx
            mountPath: /etc/nginx/template.d
            readOnly: true
          - name: operator-nginx-etc
            subPath: etc/nginx/conf.d
            mountPath: /etc/nginx/conf.d
            readOnly: false
          - name: operator-nginx-etc
            subPath: var/cache/nginx
            mountPath: /var/cache/nginx
            readOnly: false
          - name: operator-nginx-etc
            subPath: var/run
            mountPath: /var/run
            readOnly: false
      volumes:
        - name: operator-certs
          secret:
            secretName: stackgres-operator-certs
            optional: false
            items:
              - key: root.key
                path: root.key
              - key: server.crt
                path: server.crt
              - key: jwt-rsa.key
                path: jwt-rsa.key
              - key: jwt-rsa.pub
                path: jwt-rsa.pub
        - name: operator-nginx
          configMap:
            name: stackgres-restapi-nginx
            optional: false
            items:
              - key: nginx.conf
                path: nginx.conf
              - key: stackgres-operator.template
                path: stackgres-operator.template
        - name: operator-nginx-etc
          emptyDir: {}
---
# Source: stackgres-operator/templates/init-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stackgres-operator-init
  namespace: stackgres
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-100"
---
# Source: stackgres-operator/templates/init-service-account.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stackgres-operator-init
  namespace: stackgres
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-100"
subjects:
- kind: ServiceAccount
  name: stackgres-operator-init
  namespace: stackgres
roleRef:
  kind: ClusterRole
  name: 'cluster-admin'
  apiGroup: rbac.authorization.k8s.io
---
# Source: stackgres-operator/templates/create-certificate-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-create-certificate"
  namespace: stackgres
  labels:
    app: stackgres-operator
    scope: init
    job: create-certificate
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weigth": "0"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator
        scope: init
        job: create-certificate
    spec:
      serviceAccountName: stackgres-operator-init
      containers:
      - name: "stackgres-operator-create-certificate"
        image: "bitnami/kubectl:1.18.3"
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            kubectl delete csr --ignore-not-found 'stackgres-operator'
            cat << EOF > /tmp/csr.conf
            [req]
            req_extensions = v3_req
            distinguished_name = req_distinguished_name
            [req_distinguished_name]
            [ v3_req ]
            basicConstraints = CA:FALSE
            keyUsage = nonRepudiation, digitalSignature, keyEncipherment
            extendedKeyUsage = serverAuth
            subjectAltName = @alt_names
            [alt_names]
            DNS.1 = stackgres-operator
            DNS.2 = stackgres-operator.stackgres
            DNS.3 = stackgres-operator.stackgres.svc
            DNS.4 = stackgres-operator.stackgres.svc.cluster.local
            EOF
            
            openssl req -new -nodes -text -keyout /tmp/root.key \
                -subj "/CN=stackgres-operator.stackgres.svc" \
                -out /tmp/server.csr \
                -config /tmp/csr.conf
            openssl rsa -in /tmp/root.key -pubout -out /tmp/root.pem
            
            cat << EOF | kubectl create -f -
            apiVersion: certificates.k8s.io/v1beta1
            kind: CertificateSigningRequest
            metadata:
              name: stackgres-operator
            spec:
              request: "$(cat /tmp/server.csr | base64 | tr -d '\n')"
              usages:
              - digital signature
              - key encipherment
              - server auth
            EOF
            
            if ! kubectl get csr 'stackgres-operator' -o yaml|grep -q '^    type: Approved$'
            then
              kubectl certificate approve 'stackgres-operator'
              echo -n "Waiting for CSR approval..."
              until kubectl get csr 'stackgres-operator' -o yaml|grep -q '^    type: Approved$'
              do
                echo -n .
                sleep 5
              done
              echo "approved"
            fi
            echo -n "Waiting for CSR certificate generation..."
            until kubectl get csr 'stackgres-operator' \
              --template '{{ if .status }}{{ if .status.certificate }}true{{ end }}{{ end }}' \
              | grep -q '^true$'
            do
              echo -n .
              sleep 5
            done
            echo "certificate generated"

            KEY="$(cat /tmp/root.key | base64 | tr -d '\n')"
            PUB="$(cat /tmp/root.pem | base64 | tr -d '\n')"
            CRT="$(kubectl get csr 'stackgres-operator' --template '{{ .status.certificate }}')"
            
            if [ -z "$CRT" ]
            then
              echo "Certificate not found in CSR!"
              exit 1
            fi
            cat << EOF > /tmp/validating-webhook-configuration.yaml            
            apiVersion: admissionregistration.k8s.io/v1beta1
            kind: ValidatingWebhookConfiguration
            metadata:
              name: stackgres-operator
              namespace: stackgres
              annotations:
                meta.helm.sh/release-name: stackgres-operator
                meta.helm.sh/release-namespace: stackgres
              labels:
                app.kubernetes.io/managed-by: Helm
            webhooks:
              - name: sgcluster.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgclusters"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgcluster'
                  caBundle: ${CRT}
              - name: sgpgconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgpgconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgpgconfig'
                  caBundle: ${CRT}
              - name: sgpoolconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgpoolconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgpoolconfig'
                  caBundle: ${CRT}
              - name: sginstanceprofile.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sginstanceprofiles"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sginstanceprofile'
                  caBundle: ${CRT}
              - name: sgbackupconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgbackupconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgbackupconfig'
                  caBundle: ${CRT}
              - name: sgbackup.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgbackups"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgbackup'
                  caBundle: ${CRT}
              - name: sgdistributedlogs.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgdistributedlogs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgdistributedlogs'
                  caBundle: ${CRT}
            EOF
            cat << EOF > /tmp/mutating-webhook-configuration.yaml            
            apiVersion: admissionregistration.k8s.io/v1beta1
            kind: MutatingWebhookConfiguration
            metadata:
              name: stackgres-operator
              namespace: stackgres
              annotations:
                meta.helm.sh/release-name: stackgres-operator
                meta.helm.sh/release-namespace: stackgres
              labels:
                app.kubernetes.io/managed-by: Helm
            webhooks:
              - name: sgcluster.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgclusters"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgcluster'
                  caBundle: ${CRT}
              - name: sgpgconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgpgconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgpgconfig'
                  caBundle: ${CRT}
              - name: sgpoolconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgpoolconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgpoolconfig'
                  caBundle: ${CRT}
              - name: sginstanceprofile.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sginstanceprofiles"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sginstanceprofile'
                  caBundle: ${CRT}
              - name: sgbackupconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgbackupconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgbackupconfig'
                  caBundle: ${CRT}
              - name: sgbackup.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgbackups"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgbackup'
                  caBundle: ${CRT}
              - name: sgdistributedlogs.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgdistributedlogs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgdistributedlogs'
                  caBundle: ${CRT}
            
            EOF
            cat << EOF > /tmp/certificate-secret.yaml            
            apiVersion: v1
            kind: Secret
            metadata:
              name: stackgres-operator-certs
              namespace: stackgres
              annotations:
                meta.helm.sh/release-name: stackgres-operator
                meta.helm.sh/release-namespace: stackgres
              labels:
                app.kubernetes.io/managed-by: Helm
            type: Opaque
            data:
              root.key: ${KEY}
              server.crt: ${CRT}
              jwt-rsa.key: ${KEY}
              jwt-rsa.pub: ${PUB}
            
            EOF
            
            kubectl apply -f /tmp/validating-webhook-configuration.yaml
            kubectl apply -f /tmp/mutating-webhook-configuration.yaml
            kubectl apply -f /tmp/certificate-secret.yaml
            OPERATOR_POD="$(kubectl get pod)"
            kubectl scale --timeout 1h --replicas 1 -n 'stackgres' 'deployment/stackgres-operator'
            kubectl scale --timeout 1h --replicas 1 -n 'stackgres' 'deployment/stackgres-restapi'
      restartPolicy: OnFailure
---
# Source: stackgres-operator/templates/init-service-account.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-bootstrap"
  namespace: stackgres
  labels:
    app: stackgres-operator
    scope: init
    job: bootstrap
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weigth": "-100"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator
        scope: init
        job: bootstrap
    spec:
      serviceAccountName: stackgres-operator-init
      containers:
      - name: "stackgres-operator-bootstrap"
        image: "bitnami/kubectl:1.18.3"
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            true
      restartPolicy: OnFailure
---
# Source: stackgres-operator/templates/upgrade-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-upgrade"
  namespace: stackgres
  labels:
    app: stackgres-operator
    scope: init
    job: upgrade
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weigth": "-100"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator
        scope: init
        job: upgrade
    spec:
      serviceAccountName: stackgres-operator-init
      containers:
      - name: "stackgres-operator-upgrade"
        image: "bitnami/kubectl:1.18.3"
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            cat << 'EOF' > /tmp/crd.yaml
            apiVersion: apiextensions.k8s.io/v1beta1
            kind: CustomResourceDefinition
            metadata:
              name: sgbackups.stackgres.io
            spec:
              group: stackgres.io
              versions:
                - name: v1beta1
                  served: true
                  storage: true
              scope: Namespaced
              names:
                kind: SGBackup
                listKind: SGBackupList
                plural: sgbackups
                singular: sgbackup
                shortNames:
                  - sgbkp
              validation:
                openAPIV3Schema:
                  type: object
                  required: ["metadata", "spec"]
                  description: |
                    A manual or automatically generated backup of a SGCluster.
                  properties:
                    metadata:
                      type: object
                      properties:
                        name:
                          type: string
                          description: |
                            Name of the backup. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.
            
                            The name must be unique across all StackGres backups in the same namespace."
                    spec:
                      type: object
                      properties:
                        sgCluster:
                          type: string
                          description: |
                            The name of the `SGCluster` from which this backup is/will be taken.
                        managedLifecycle:
                          type: boolean
                          description: |
                            Indicate if this backup is permanent and should not be removed by the automated retention policy.
                    status:
                      type: object
                      properties:
                        internalName:
                          type: string
                          description: |
                            The name of the backup.
                        process:
                          type: object
                          properties:
                            status:
                              type: string
                              enum: [Running, Completed, Failed]
                              description: |
                                Status of the backup.
                            failure:
                              type: string
                              description: |
                                If the status is `failed` this field will contain a message indicating the failure reason.
                            jobPod:
                              type: string
                              description: |
                                Name of the pod assigned to the backup. StackGres utilizes internally a locking mechanism based on the pod name of the job that creates the backup.
                            managedLifecycle:
                              type: boolean
                              description: |
                                Status (may be transient) until converging to `spec.managedLifecycle`.
                            timing:
                              type: object
                              properties:
                                start:
                                  type: string
                                  # format: date-time
                                  description: |
                                    Start time of backup.
                                end:
                                  type: string
                                  # format: date-time
                                  description: |
                                    End time of backup.
                                stored:
                                  type: string
                                  # format: date-time
                                  description: |
                                    Time at which the backup is safely stored in the object storage.
                        backupInformation:
                          type: object
                          properties:
                            hostname:
                              type: string
                              description: |
                                Hostname of the instance where the backup is taken from.
                            sourcePod:
                              type: string
                              description: |
                                Pod where the backup is taken from.
                            systemIdentifier:
                              type: string
                              description: |
                                Postgres *system identifier* of the cluster this backup is taken from.
                            postgresVersion:
                              type: string
                              description: |
                                Postgres version of the server where the backup is taken from.
                            pgData:
                              type: string
                              description: |
                                Data directory where the backup is taken from.
                            size:
                              type: object
                              properties:
                                uncompressed:
                                  type: integer
                                  format: int64
                                  description: |
                                    Size (in bytes) of the uncompressed backup.
                                compressed:
                                  type: integer
                                  format: int64
                                  description: |
                                    Size (in bytes) of the compressed backup.
                            lsn:
                              type: object
                              properties:
                                start:
                                  type: string
                                  description: |
                                    LSN of when the backup started.
                                end:
                                  type: string
                                  description: |
                                    LSN of when the backup finished.
                            startWalFile:
                              type: string
                              description: |
                                WAL segment file name when the backup was started.
                            timeline:
                              type: string
                              description: |
                                Backup timeline.
                            controlData:
                              type: object
                              description: |
                                An object containing data from the output of pg_controldata on the backup.
                        sgBackupConfig:
                          type: object
                          description: The name of the backup configuration used to perform this backup.
                          properties:
                            compression:
                              type: string
                              description: |
                                Select the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                              enum: [lz4, lzma, brotli]
                            storage:
                              type: object
                              description: |
                                Backup storage configuration.
                              properties:
                                type:
                                  type: string
                                  enum: [s3, s3Compatible, gcs, azureBlob]
                                  description: |
                                    Specifies the type of object storage used for storing the base backups and WAL segments.
                                    Possible values:
                                    *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                                    *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                                    *  `gcs`: Google Cloud Storage.
                                    *  `azureBlob`: Microsoft Azure Blob Storage.
                                s3:
                                  type: object
                                  description: |
                                    Amazon Web Services S3 configuration.
                                  properties:
                                    bucket:
                                      type: string
                                      pattern: ^[^/]+(/[^/]*)*$
                                      description: |
                                        AWS S3 bucket name.
                                    path:
                                      type: string
                                      pattern: ^(/[^/]*)*$
                                      description: |
                                        Optional path within the S3 bucket. Note that StackGres generates in any case a folder per
                                        StackGres cluster, using the `SGCluster.metadata.name`.
                                    region:
                                      type: string
                                      description: |
                                        AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
                                    storageClass:
                                      type: string
                                      description: |
                                        [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                                    awsCredentials:
                                      type: object
                                      description: |
                                        Credentials to access AWS S3 for writing and reading.
                                      properties:
                                        secretKeySelectors:
                                          type: object
                                          description: |
                                            Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `awsCredentials`.
                                          properties:
                                            accessKeyId:
                                              type: object
                                              description: |
                                                [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                              properties:
                                                key:
                                                  type: string
                                                  description: |
                                                    The key of the secret to select from. Must be a valid secret key.
                                                name:
                                                  type: string
                                                  description: |
                                                    Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                              required: [key, name]
                                            secretAccessKey:
                                              type: object
                                              description: |
                                                [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                              properties:
                                                key:
                                                  type: string
                                                  description: |
                                                    The key of the secret to select from. Must be a valid secret key.
                                                name:
                                                  type: string
                                                  description: |
                                                    Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                              required: [key, name]
                                          required: [accessKeyId, secretAccessKey]
                                      required: [secretKeySelectors]
                                  required: [bucket, awsCredentials]
                                s3Compatible:
                                  type: object
                                  description: AWS S3-Compatible API configuration
                                  properties:
                                    bucket:
                                      type: string
                                      pattern: ^[^/]+(/[^/]*)*$
                                      description: |
                                        Bucket name.
                                    path:
                                      type: string
                                      pattern: ^(/[^/]*)*$
                                      description: |
                                        Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                                    enablePathStyleAddressing:
                                      type: boolean
                                      description: |
                                        Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`). Defaults to false.
                                    endpoint:
                                      type: string
                                      description: |
                                        Overrides the default url to connect to an S3-compatible service.
                                        For example: `http://s3-like-service:9000`.
                                    region:
                                      type: string
                                      description: |
                                        AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
                                    storageClass:
                                      type: string
                                      description: |
                                        [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                                    awsCredentials:
                                      type: object
                                      description: |
                                        Credentials to access AWS S3 for writing and reading.
                                      properties:
                                        secretKeySelectors:
                                          type: object
                                          description: |
                                            A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the `awsCredentials`.
                                          properties:
                                            accessKeyId:
                                              type: object
                                              description: |
                                                [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                              properties:
                                                key:
                                                  type: string
                                                  description: |
                                                    The key of the secret to select from. Must be a valid secret key.
                                                name:
                                                  type: string
                                                  description: |
                                                    Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                              required: [key, name]
                                            secretAccessKey:
                                              type: object
                                              description: |
                                                [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                              properties:
                                                key:
                                                  type: string
                                                  description: |
                                                    The key of the secret to select from. Must be a valid secret key.
                                                name:
                                                  type: string
                                                  description: |
                                                    Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                              required: [key, name]
                                          required: [accessKeyId, secretAccessKey]
                                      required: [secretKeySelectors]
                                  required: [bucket, awsCredentials]
                                gcs:
                                  type: object
                                  description: |
                                    Google Cloud Storage configuration.
                                  properties:
                                    bucket:
                                      type: string
                                      pattern: ^[^/]+(/[^/]*)*$
                                      description: |
                                        GCS bucket name.
                                    path:
                                      type: string
                                      pattern: ^(/[^/]*)*$
                                      description: |
                                        Optional path within the GCS bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                                    gcpCredentials:
                                      type: object
                                      description: |
                                        Credentials to access GCS for writing and reading.
                                      properties:
                                        fetchCredentialsFromMetadataService:
                                          type: boolean
                                          description: |
                                            If true, the credentials will be fetched from the GCE/GKE metadata service and the credentials from `secretKeySelectors` field will not be used.
            
                                            This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
                                        secretKeySelectors:
                                          type: object
                                          description: |
                                            A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
                                          properties:
                                            serviceAccountJSON:
                                              type: object
                                              description: |
                                                A service account key from GCP. In JSON format, as downloaded from the GCP Console.
                                              properties:
                                                key:
                                                  type: string
                                                  description: |
                                                    The key of the secret to select from. Must be a valid secret key.
                                                name:
                                                  type: string
                                                  description: |
                                                    Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                              required: [key, name]
                                          required: [serviceAccountJSON]
                                      required: []
                                  required: [bucket, gcpCredentials]
                                azureBlob:
                                  type: object
                                  description: |
                                    Azure Blob Storage configuration.
                                  properties:
                                    bucket:
                                      type: string
                                      pattern: ^[^/]+(/[^/]*)*$
                                      description: |
                                        Azure Blob Storage bucket name.
                                    path:
                                      type: string
                                      pattern: ^(/[^/]*)*$
                                      description: |
                                        Optional path within the Azure Blobk bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                                    azureCredentials:
                                      type: object
                                      description: |
                                        The credentials to access Azure Blob Storage for writing and reading.
                                      properties:
                                        secretKeySelectors:
                                          type: object
                                          description: |
                                            Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `azureCredentials`.
                                          properties:
                                            storageAccount:
                                              type: object
                                              description: |
                                                [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the name of the storage account.
                                              properties:
                                                key:
                                                  type: string
                                                  description: |
                                                    The key of the secret to select from. Must be a valid secret key.
                                                name:
                                                  type: string
                                                  description: |
                                                    Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                              required: [key, name]
                                            accessKey:
                                              type: object
                                              description: |
                                                [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the primary or secondary access key for the storage account.
                                              properties:
                                                key:
                                                  type: string
                                                  description: |
                                                    The key of the secret to select from. Must be a valid secret key.
                                                name:
                                                  type: string
                                                  description: |
                                                    Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                              required: [key, name]
                                          required: [storageAccount, accessKey]
                                  required: [bucket, azureCredentials]
                              required: [type]
                          required: [storage]
            
            EOF
            kubectl apply -f /tmp/crd.yaml
            cat << 'EOF' > /tmp/crd.yaml
            apiVersion: apiextensions.k8s.io/v1beta1
            kind: CustomResourceDefinition
            metadata:
              name: sgbackupconfigs.stackgres.io
              # annotations:
              #   "helm.sh/hook": crd-install
            spec:
              group: stackgres.io
              versions:
                - name: v1beta1
                  served: true
                  storage: true
              scope: Namespaced
              names:
                kind: SGBackupConfig
                listKind: SGBackupConfigList
                plural: sgbackupconfigs
                singular: sgbackupconfig
                shortNames:
                  - sgbac
              validation:
                openAPIV3Schema:
                  type: object
                  required: ["metadata", "spec"]
                  properties:
                    metadata:
                      type: object
                      properties:
                        name:
                          type: string
                          description: |
                            Name of the Backup Configuration. StackGres supports [Continuous Archiving](https://www.postgresql.org/docs/current/continuous-archiving.html)-based backups which are performed automatically, helping achieve near-zero data loss in case of recovery from a backup. An SGBackupConfig contains the necessary configuration to perform these automatic backups and may be referenced by zero or more SGClusters, and if so it would be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.
            
                            The name must be unique across all backup configurations in the same namespace.
                    spec:
                      type: object
                      properties:
                        baseBackups:
                          type: object
                          description: |
                            Back backups configuration.
                          properties:
                            cronSchedule:
                              type: string
                              description: |
                                Continuous Archiving backups are composed of periodic *base backups* and all the WAL segments produced in between those base backups. This parameter specifies at what time and with what frequency to start performing a new base backup.
            
                                Use cron syntax (`m h dom mon dow`) for this parameter, i.e., 5 values separated by spaces:
                                *  `m`: minute, 0 to 59.
                                *  `h`: hour, 0 to 23.
                                *  `dom`: day of month, 1 to 31 (recommended not to set it higher than 28).
                                *  `mon`: month, 1 to 12.
                                *  `dow`: day of week, 0 to 7 (0 and 7 both represent Sunday).
            
                                Also ranges of values (`start-end`), the symbol `*` (meaning `first-last`) or even `*/N`, where `N` is a number, meaning ""every `N`, may be used. All times are UTC. It is recommended to avoid 00:00 as base backup time, to avoid overlapping with any other external operations happening at this time.
            
                                If not set, full backups are performed each day at 05:00 UTC.
                            retention:
                              type: integer
                              minimum: 1
                              description: |
                                When an automatic retention policy is defined to delete old base backups, this parameter specifies the number of base backups to keep, in a sliding window.
            
                                Consequently, the time range covered by backups is `periodicity*retention`, where `periodicity` is the separation between backups as specified by the `cronSchedule` property.
            
                                Default is 5.
                            compression:
                              type: string
                              description: |
                                Specifies the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                              enum: ["lz4", "lzma", "brotli"]
                            performance:
                              type: object
                              properties:
                                maxNetworkBandwitdh:
                                  type: integer
                                  description: |
                                    Maximum storage upload bandwidth used when storing a backup. In bytes (per second).
                                maxDiskBandwitdh:
                                  type: integer
                                  description: |
                                    Maximum disk read I/O when performing a backup. In bytes (per second).
                                uploadDiskConcurrency:
                                  type: integer
                                  minimum: 1
                                  description: |
                                    Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use. By default, it's set to 1 (use one stream).
                        storage:
                          type: object
                          description: |
                            Backup storage configuration.
                          properties:
                            type:
                              type: string
                              enum: ["s3", "s3Compatible", "gcs", "azureBlob"]
                              description: |
                                Determine the type of object storage used for storing the base backups and WAL segments.
                                Possible values:
                                *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                                *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                                *  `gcs`: Google Cloud Storage.
                                *  `azureBlob`: Microsoft Azure Blob Storage.
                            s3:
                              type: object
                              description: |
                                Amazon Web Services S3 configuration.
                              properties:
                                bucket:
                                  type: string
                                  pattern: '^((s3|https?)://)?[^/]+(/[^/]*)*$'
                                  description: |
                                    AWS S3 bucket name.
                                path:
                                  type: string
                                  pattern: '^(/[^/]*)*$'
                                  description: |
                                    Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                                region:
                                  type: string
                                  description: |
                                    The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                                storageClass:
                                  type: string
                                  description: |
                                    The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                                awsCredentials:
                                  type: object
                                  description: |
                                    The credentials to access AWS S3 for writing and reading.
                                  properties:
                                    secretKeySelectors:
                                      type: object
                                      description: |
                                        Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)(s) to reference the Secrets that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                                      properties:
                                        accessKeyId:
                                          type: object
                                          description: |
                                            AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
                                          properties:
                                            key:
                                              type: string
                                              description: |
                                                The key of the secret to select from. Must be a valid secret key.
                                            name:
                                              type: string
                                              description: |
                                                Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          required: ["key", "name"]
                                        secretAccessKey:
                                          type: object
                                          description: |
                                            AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
                                          properties:
                                            key:
                                              type: string
                                              description: |
                                                The key of the secret to select from. Must be a valid secret key.
                                            name:
                                              type: string
                                              description: |
                                                Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          required: ["key", "name"]
                                      required: ["accessKeyId", "secretAccessKey"]
                                  required: ["secretKeySelectors"]
                              required: ["bucket", "awsCredentials"]
                            s3Compatible:
                              type: object
                              description: "AWS S3-Compatible API configuration"
                              properties:
                                bucket:
                                  type: string
                                  pattern: '^((s3|https?)://)?[^/]+(/[^/]*)*$'
                                  description: |
                                    Bucket name.
                                path:
                                  type: string
                                  pattern: '^(/[^/]*)*$'
                                  description: |
                                    Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                                enablePathStyleAddressing:
                                  type: boolean
                                  description: |
                                    Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`).
            
                                    Defaults to false.
                                endpoint:
                                  type: string
                                  description: |
                                    Overrides the default url to connect to an S3-compatible service.
                                    For example: `http://s3-like-service:9000`.
                                region:
                                  type: string
                                  description: |
                                    The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                                storageClass:
                                  type: string
                                  description: |
                                    The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                                awsCredentials:
                                  type: object
                                  description: |
                                    The credentials to access AWS S3 for writing and reading.
                                  properties:
                                    secretKeySelectors:
                                      type: object
                                      description: |
                                        Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                                      properties:
                                        accessKeyId:
                                          type: object
                                          description: |
                                            AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
                                          properties:
                                            key:
                                              type: string
                                              description: |
                                                The key of the secret to select from. Must be a valid secret key.
                                            name:
                                              type: string
                                              description: |
                                                Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          required: ["key", "name"]
                                        secretAccessKey:
                                          type: object
                                          description: |
                                            AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
                                          properties:
                                            key:
                                              type: string
                                              description: |
                                                The key of the secret to select from. Must be a valid secret key.
                                            name:
                                              type: string
                                              description: |
                                                Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          required: ["key", "name"]
                                      required: ["accessKeyId", "secretAccessKey"]
                                  required: ["secretKeySelectors"]
                              required: ["bucket", "awsCredentials"]
                            gcs:
                              type: object
                              description: |
                                Google Cloud Storage configuration.
                              properties:
                                bucket:
                                  type: string
                                  pattern: "^(gs://)?[^/]+(/[^/]*)*$"
                                  description: |
                                    GCS bucket name.
                                path:
                                  type: string
                                  pattern: "^(/[^/]*)*$"
                                  description: |
                                    Optional path within the GCS bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                                gcpCredentials:
                                  type: object
                                  description: |
                                    The credentials to access GCS for writing and reading.
                                  properties:
                                    fetchCredentialsFromMetadataService:
                                      type: boolean
                                      description: |
                                        If true, the credentials will be fetched from the GCE/GKE metadata service and the field `secretKeySelectors` have to be set to null or omitted.
            
                                        This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
                                    secretKeySelectors:
                                      type: object
                                      description: |
                                        A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
                                      properties:
                                        serviceAccountJSON:
                                          type: object
                                          description: |
                                            A service account key from GCP. In JSON format, as downloaded from the GCP Console.
                                          properties:
                                            key:
                                              type: string
                                              description: |
                                                The key of the secret to select from. Must be a valid secret key.
                                            name:
                                              type: string
                                              description: |
                                                Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          required: ["key", "name"]
                                      required: ["serviceAccountJSON"]
                                  required: []
                              required: ["bucket", "gcpCredentials"]
                            azureBlob:
                              type: object
                              description: |
                                Azure Blob Storage configuration.
                              properties:
                                bucket:
                                  type: string
                                  pattern: "^(azure://)?[^/]+(/[^/]*)*$"
                                  description: |
                                    Azure Blob Storage bucket name.
                                path:
                                  type: string
                                  pattern: "^(/[^/]*)*$"
                                  description: |
                                    Optional path within the Azure Blob bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                                azureCredentials:
                                  type: object
                                  description: |
                                    The credentials to access Azure Blob Storage for writing and reading.
                                  properties:
                                    secretKeySelectors:
                                      type: object
                                      description: |
                                        Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `azureCredentials`. . Note that you may use the same or different Secrets for the `storageAccount` and the `accessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                                      properties:
                                        storageAccount:
                                          type: object
                                          description: |
                                            The [Storage Account](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview?toc=/azure/storage/blobs/toc.json) that contains the Blob bucket to be used.
                                          properties:
                                            key:
                                              type: string
                                              description: |
                                                The key of the secret to select from. Must be a valid secret key.
                                            name:
                                              type: string
                                              description: |
                                                Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          required: ["key", "name"]
                                        accessKey:
                                          type: object
                                          description: |
                                            The [storage account access key](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal).
                                          properties:
                                            key:
                                              type: string
                                              description: |
                                                The key of the secret to select from. Must be a valid secret key.
                                            name:
                                              type: string
                                              description: |
                                                Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          required: ["key", "name"]
                                      required: ["storageAccount", "accessKey"]
                              required: ["bucket", "azureCredentials"]
                          required: ["type"]
                      required: ["storage"]
            
            EOF
            kubectl apply -f /tmp/crd.yaml
            cat << 'EOF' > /tmp/crd.yaml
            apiVersion: apiextensions.k8s.io/v1beta1
            kind: CustomResourceDefinition
            metadata:
              name: sgclusters.stackgres.io
              # annotations:
              #   "helm.sh/hook": crd-install
            spec:
              group: stackgres.io
              versions:
                - name: v1beta1
                  served: true
                  storage: true
              scope: Namespaced
              names:
                kind: SGCluster
                listKind: SGClusterList
                plural: sgclusters
                singular: sgcluster
                shortNames:
                  - sgclu
              validation:
                openAPIV3Schema:
                  type: object
                  required: ["metadata", "spec"]
                  properties:
                    metadata:
                      type: object
                      properties:
                        name:
                          type: string
                          description: |
                            Name of the StackGres cluster. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.
            
                            The name must be unique across all StackGres clusters in the same namespace. The full cluster name includes the namespace in which the cluster is created.
                    spec:
                      type: object
                      properties:
                        postgresVersion:
                          type: string
                          description: |
                            Postgres version used on the cluster. It is either of:
                            *  The string 'latest', which automatically sets the latest major.minor Postgres version.
                            *  A major version, like '12' or '11', which sets that major version and the latest minor version.
                            *  A specific major.minor version, like '12.2'.
                        instances:
                          type: integer
                          minimum: 1
                          maximum: 16
                          description: |
                            Number of StackGres instances for the cluster. Each instance contains one Postgres server. Out of all of the Postgres servers, one is elected as the master, the rest remain as read-only replicas.
                        sgInstanceProfile:
                          type: string
                          description: |
                            Name of the [SGInstanceProfile](https://stackgres.io/doc/latest/reference/crd/sginstanceprofile). A SGInstanceProfile defines CPU and memory limits. Must exist before creating a cluster. When no profile is set, a default (currently: 1 core, 2 GiB RAM) one is used.
                        metadata:
                          type: object
                          description: Metadata information from cluster created resources.
                          properties:
                            annotations:
                              type: object
                              description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) to be passed to resources created and managed by StackGres.
                              properties:
                                allResources:
                                  type: object
                                  description: Annotations to attach to any resource created or managed by StackGres.
                                  additionalProperties:
                                    type: string
                                pods:
                                  type: object
                                  description: Annotations to attach to pods created or managed by StackGres.
                                  additionalProperties:
                                    type: string
                                services:
                                  type: object
                                  description: Annotations to attach to services created or managed by StackGres.
                                  additionalProperties:
                                    type: string
                        postgresServices:
                          type: object
                          description: Kubernetes [services](https://kubernetes.io/docs/concepts/services-networking/service/) created or managed by StackGres.
                          properties:
                            primary:
                              type: object
                              description: Configuration for the `-primary` service. It provides a stable connection (regardless of primary failures or switchovers) to the read-write Postgres server of the cluster.
                              properties:
                                enabled:
                                  type: boolean
                                  description: Specify if the `-primary` service should be created or not.
                                type:
                                  type: string
                                  enum: ["ClusterIP", "LoadBalancer", "NodePort"]
                                  description: Specifies the type of Kubernetes service.
                                annotations:
                                  type: object
                                  additionalProperties:
                                    type: string
                                  description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-primary` service.
                            replicas:
                              type: object
                              description: Configuration for the `-replicas` service. It provides a stable connection (regardless of replica node failures) to any read-only Postgres server of the cluster. Read-only servers are load-balanced via this service.
                              properties:
                                enabled:
                                  type: boolean
                                  description: Specify if the `-replicas` service should be created or not.
                                type:
                                  type: string
                                  enum: ["ClusterIP", "LoadBalancer", "NodePort"]
                                  description: Specifies the type of Kubernetes service.
                                annotations:
                                  type: object
                                  additionalProperties:
                                    type: string
                                  description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-replicas` service.
                        pods:
                          type: object
                          description: Cluster pod's configuration.
                          properties:
                            persistentVolume:
                              type: object
                              description: Pod's persistent volume configuration.
                              properties:
                                size:
                                  type: string
                                  pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi|Ti)$'
                                  description: |
                                    Size of the PersistentVolume set for each instance of the cluster. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
                                storageClass:
                                  type: string
                                  description: |
                                    Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
                              required: ["size"]
                            disableConnectionPooling:
                              type: boolean
                              description: If set to `true`, avoids creating a connection pooling (using [PgBouncer](https://www.pgbouncer.org/)) sidecar.
                            disableMetricsExporter:
                              type: boolean
                              description: If set to `true`, avoids creating the Prometheus exporter sidecar. Recommended when there's no intention to use Prometheus for monitoring.
                            disablePostgresUtil:
                              type: boolean
                              description: If set to `true`, avoids creating the `postgres-util` sidecar. This sidecar contains usual Postgres administration utilities *that are not present in the main (`patroni`) container*, like `psql`. Only disable if you know what you are doing.
                            metadata:
                              type: object
                              description: Pod custom metadata information.
                              properties:
                                labels:
                                  type: object
                                  additionalProperties:
                                    type: string
                                  description: Additional labels for StackGres Pods.
                            scheduling:
                              type: object
                              description: Pod custom scheduling configuration.
                              properties:
                                nodeSelector:
                                  type: object
                                  additionalProperties:
                                    type: string
                                  description: Pod custom node selector.
                                tolerations:
                                  type: array
                                  description: Pod custom node tolerations
                                  items:
                                    type: object
                                    description: Pod custom node toleration
                                    properties:
                                      key:
                                        type: string
                                        description: |
                                          Key is the taint key that the toleration applies to. Empty means match all taint
                                           keys. If the key is empty, operator must be Exists; this combination means to
                                           match all values and all keys.
                                      operator:
                                        type: string
                                        description: |
                                          Operator represents a key's relationship to the value. Valid operators are Exists
                                           and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that
                                           a pod can tolerate all taints of a particular category.
                                      value:
                                        type: string
                                        description: |
                                          Value is the taint value the toleration matches to. If the operator is Exists, the
                                           value should be empty, otherwise just a regular string.
                                      effect:
                                        type: string
                                        description: |
                                          Effect indicates the taint effect to match. Empty means match all taint effects.
                                           When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                      tolerationSeconds:
                                        type: integer
                                        description: |
                                          TolerationSeconds represents the period of time the toleration (which must be of
                                           effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                           it is not set, which means tolerate the taint forever (do not evict). Zero and
                                           negative values will be treated as 0 (evict immediately) by the system.
                          required: ["persistentVolume"]
                        configurations:
                          type: object
                          description: |
                            Cluster custom configurations.
                          properties:
                            sgPostgresConfig:
                              type: string
                              description: |
                                Name of the [SGPostgresConfig](https://stackgres.io/doc/latest/reference/crd/sgpgconfig) used for the cluster. It must exist. When not set, a default Postgres config, for the major version selected, is used.
                            sgPoolingConfig:
                              type: string
                              description: |
                                Name of the [SGPoolingConfig](https://stackgres.io/doc/latest/reference/crd/sgpoolconfig) used for this cluster. Each pod contains a sidecar with a connection pooler (currently: [PgBouncer](https://www.pgbouncer.org/)). The connection pooler is implemented as a sidecar.
            
                                If not set, a default configuration will be used. Disabling connection pooling altogether is possible if the disableConnectionPooling property of the pods object is set to true.
                            sgBackupConfig:
                              type: string
                              description: |
                                Name of the [SGBackupConfig](https://stackgres.io/doc/latest/reference/crd/sgbackupconfig) to use for the cluster. It defines the backups policy, storage and retention, among others, applied to the cluster. When not set, a default backup config is used.
                        initialData:
                          type: object
                          description: Cluster initialization data options. Cluster may be initialized empty, or from a backup restoration. Specifying scripts to run on the database after cluster creation is also possible.
                          properties:
                            restore:
                              type: object
                              properties:
                                fromBackup:
                                  type: string
                                  description: |
                                    When set to the UID of an existing [SGBackup](https://stackgres.io/doc/latest/reference/crd/sgbackup), the cluster is initialized by restoring the backup data to it. If not set, the cluster is initialized empty. The selected backup must be in the same namespace.
                                downloadDiskConcurrency:
                                  type: integer
                                  minimum: 1
                                  description: |
                                    The backup fetch process may fetch several streams in parallel. Parallel fetching is enabled when set to a value larger than one.
                            scripts:
                              type: array
                              description: |
                                A list of SQL scripts executed in sequence, exactly once, when the database is bootstrap and/or after restore is completed.
                              items:
                                type: object
                                description: |
                                  Scripts are executed in auto-commit mode with the user `postgres` in the specified database (or in database `postgres` if not specified).
            
                                  Fields `script` and `scriptFrom` are mutually exclusive and only one of them is required.
                                properties:
                                  name:
                                    type: string
                                    description: |
                                      Name of the script. Must be unique across this SGCluster.
                                  database:
                                    type: string
                                    description: |
                                      Database where the script is executed. Defaults to the `postgres` database, if not specified.
                                  script:
                                    type: string
                                    description: |
                                      Raw SQL script to execute. This field is mutually exclusive with `scriptFrom` field.
                                  scriptFrom:
                                    type: object
                                    description: |
                                      Reference to either a Kubernetes [Secret](https://kubernetes.io/docs/concepts/configuration/secret/) or a [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) that contains the SQL script to execute. This field is mutually exclusive with `script` field.
            
                                      Fields `secretKeyRef` and `configMapKeyRef` are mutually exclusive, and one of them is required.
                                    properties:
                                      secretKeyRef:
                                        type: object
                                        description: |
                                          A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) that contains the SQL script to execute. This field is mutually exclusive with `configMapKeyRef` field.
                                        properties:
                                          name:
                                            type: string
                                            description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          key:
                                            type: string
                                            description: The key of the secret to select from. Must be a valid secret key.
                                      configMapKeyRef:
                                        type: object
                                        description: |
                                          A [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) reference that contains the SQL script to execute. This field is mutually exclusive with `secretKeyRef` field.
                                        properties:
                                          name:
                                            type: string
                                            description: |
                                              The name of the ConfigMap that contains the SQL script to execute.
                                          key:
                                            type: string
                                            description: |
                                              The key name within the ConfigMap that contains the SQL script to execute.
                        prometheusAutobind:
                          type: boolean
                          description: |
                            If enabled, a ServiceMonitor is created for each Prometheus instance found in order to collect metrics.
                        nonProductionOptions:
                          type: object
                          properties:
                            disableClusterPodAntiAffinity:
                              type: boolean
                              description: |
                                It is a best practice, on non-containerized environments, when running production workloads, to run each database server on a different server (virtual or physical), i.e., not to co-locate more than one database server per host.
            
                                The same best practice applies to databases on containers. By default, StackGres will not allow to run more than one StackGres pod on a given Kubernetes node. Set this property to true to allow more than one StackGres pod per node.
                        distributedLogs:
                          type: object
                          description: StackGres features a functionality for all pods to send Postgres, Patroni and PgBouncer logs to a central (distributed) location, which is in turn another Postgres database. Logs can then be accessed via SQL interface or from the web UI. This section controls whether to enable this feature or not. If not enabled, logs are send to the pod's standard output.
                          properties:
                            sgDistributedLogs:
                              type: string
                              description: |
                                Name of the [SGDistributedLogs](https://stackgres.io/doc/latest/reference/crd/sgdistributedlogs) to use for this cluster. It must exist.
                      required: ["instances", "postgresVersion", "pods"]
            
            EOF
            kubectl apply -f /tmp/crd.yaml
            cat << 'EOF' > /tmp/crd.yaml
            apiVersion: apiextensions.k8s.io/v1beta1
            kind: CustomResourceDefinition
            metadata:
              name: sgdistributedlogs.stackgres.io
              # annotations:
              #   "helm.sh/hook": crd-install
            spec:
              group: stackgres.io
              versions:
                - name: v1beta1
                  served: true
                  storage: true
              scope: Namespaced
              names:
                kind: SGDistributedLogs
                listKind: SGDistributedLogsList
                plural: sgdistributedlogs
                singular: sgdistributedlogs
                shortNames:
                  - sgdil
              validation:
                openAPIV3Schema:
                  type: object
                  required: ["metadata", "spec"]
                  properties:
                    metadata:
                      type: object
                      properties:
                        name:
                          type: string
                          description: |
                            Name of the Distributed Logs cluster. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.
            
                            A Distributed Logs cluster may store logs for zero or more SGClusters.
            
                            The name must be unique across all Distributed Logs and StackGres clusters in the same namespace. The full cluster name includes the namespace in which the cluster is created.
                    spec:
                      type: object
                      properties:
                        persistentVolume:
                          type: object
                          description: Pod's persistent volume configuration
                          properties:
                            size:
                              type: string
                              pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi|Ti)$'
                              description: |
                                Size of the PersistentVolume set for the pod of the cluster for distributed logs. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
                            storageClass:
                              type: string
                              description: |
                                Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
                        scheduling:
                          type: object
                          description: Pod custom scheduling configuration.
                          properties:
                            nodeSelector:
                              type: object
                              additionalProperties:
                                type: string
                              description: Pod custom node selector.
                            tolerations:
                              type: array
                              description: Pod custom node tolerations
                              items:
                                type: object
                                description: Pod custom node toleration
                                properties:
                                  key:
                                    type: string
                                    description: |
                                      Key is the taint key that the toleration applies to. Empty means match all taint
                                       keys. If the key is empty, operator must be Exists; this combination means to
                                       match all values and all keys.
                                  operator:
                                    type: string
                                    description: |
                                      Operator represents a key's relationship to the value. Valid operators are Exists
                                       and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that
                                       a pod can tolerate all taints of a particular category.
                                  value:
                                    type: string
                                    description: |
                                      Value is the taint value the toleration matches to. If the operator is Exists, the
                                       value should be empty, otherwise just a regular string.
                                  effect:
                                    type: string
                                    description: |
                                      Effect indicates the taint effect to match. Empty means match all taint effects.
                                       When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                  tolerationSeconds:
                                    type: integer
                                    description: |
                                      TolerationSeconds represents the period of time the toleration (which must be of
                                       effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                       it is not set, which means tolerate the taint forever (do not evict). Zero and
                                       negative values will be treated as 0 (evict immediately) by the system.
                        metadata:
                          type: object
                          description: Metadata information from cluster created resources.
                          properties:
                            annotations:
                              type: object
                              description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) to be passed to resources created and managed by StackGres.
                              properties:
                                allResources:
                                  type: object
                                  description: Annotations to attach to any resource created or managed by StackGres.
                                  additionalProperties:
                                    type: string
                                pods:
                                  type: object
                                  description: Annotations to attach to pods created or managed by StackGres.
                                  additionalProperties:
                                    type: string
                                services:
                                  type: object
                                  description: Annotations to attach to services created or managed by StackGres.
                                  additionalProperties:
                                    type: string
                        nonProductionOptions:
                          type: object
                          properties:
                            disableClusterPodAntiAffinity:
                              type: boolean
                              description: |
                                It is a best practice, on non-containerized environments, when running production workloads, to run each database server on a different server (virtual or physical), i.e., not to co-locate more than one database server per host.
            
                                The same best practice applies to databases on containers. By default, StackGres will not allow to run more than one StackGres or Distributed Logs pod on a given Kubernetes node. If set to `true` it will allow more than one StackGres pod per node.
                      required: ["persistentVolume"]
            
            EOF
            kubectl apply -f /tmp/crd.yaml
            cat << 'EOF' > /tmp/crd.yaml
            apiVersion: apiextensions.k8s.io/v1beta1
            kind: CustomResourceDefinition
            metadata:
              name: sginstanceprofiles.stackgres.io
            spec:
              group: stackgres.io
              versions:
                - name: v1beta1
                  served: true
                  storage: true
              scope: Namespaced
              names:
                kind: SGInstanceProfile
                listKind: SGInstanceProfileList
                plural: sginstanceprofiles
                singular: sginstanceprofile
                shortNames:
                  - sginp
              validation:
                openAPIV3Schema:
                  required: ["metadata", "spec"]
                  type: object
                  properties:
                    metadata:
                      type: object
                      properties:
                        name:
                          type: string
                          description: |
                            Name of the Instance Profile. An instance profile represents a ""kind"" of server (CPU and RAM) where you may run StackGres, classified by a given name. The profile may be referenced by zero or more SGClusters, and if so it would be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.
            
                            The name must be unique across all instance profiles in the same namespace."
                    spec:
                      type: object
                      properties:
                        cpu:
                          type: string
                          pattern: '^[1-9][0-9]*[m]?$'
                          description: |
                            CPU(s) (cores) used for every instance of a SGCluster. Please note that every StackGres pod contains not only the Patroni+Postgres container, but several other sidecar containers. While the majority of the resources are devoted to the main Postgres container, some CPU is needed for the sidecars.
            
                            The number of cores set is split between all the containers.
            
                            A minimum of 2 cores is recommended.
                        memory:
                          type: string
                          pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                          description: |
                            RAM allocated to every instance of a SGCluster. The suffix `Mi` or `Gi` specifies Mebibytes or Gibibytes, respectively. Please note that every StackGres pod contains not only the Patroni+Postgres container, but several other sidecar containers. While the majority of the resources are devoted to the main Postgres container, some RAM is needed for the sidecars.
            
                            The amount of RAM set is split between all the containers.
            
                            A minimum of 2-4Gi is recommended.
                      required: ["cpu", "memory"]
            
            EOF
            kubectl apply -f /tmp/crd.yaml
            cat << 'EOF' > /tmp/crd.yaml
            apiVersion: apiextensions.k8s.io/v1beta1
            kind: CustomResourceDefinition
            metadata:
              name: sgpoolconfigs.stackgres.io
            spec:
              group: stackgres.io
              versions:
                - name: v1beta1
                  served: true
                  storage: true
              scope: Namespaced
              names:
                kind: SGPoolingConfig
                listKind: SGPoolingConfigList
                plural: sgpoolconfigs
                singular: sgpoolconfig
                shortNames:
                  - sgpoc
              validation:
                openAPIV3Schema:
                  type: object
                  required: ["metadata", "spec"]
                  properties:
                    metadata:
                      type: object
                      properties:
                        name:
                          type: string
                          description: |
                            Name of the Connection Pooling Configuration. The configuration may be referenced by zero or more SGClusters, and if so it would be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.
            
                            The name must be unique across all Connection Pooling configurations in the same namespace.
                    spec:
                      type: object
                      properties:
                        pgBouncer:
                          type: object
                          description: |
                            Connection pooling configuration based on PgBouncer.
                          properties:
                            pgbouncer.ini:
                              type: object
                              additionalProperties:
                                type: string
                              description: |
                                The `pgbouncer.ini` parameters the configuration contains, represented as an object where the keys are valid names for the `pgbouncer.ini` configuration file parameters.
            
                                Check [pgbouncer configuration](https://www.pgbouncer.org/config.html) for more information about supported parameters.
                    status:
                      type: object
                      properties:
                        pgBouncer:
                          type: object
                          description: |
                            Connection pooling configuration status based on PgBouncer.
                          properties:
                            defaultParameters:
                              type: array
                              description: |
                                List of parameters which are set to theirs default value.
                              items:
                                type: string
                                description: |
                                  Name of a parameter that is set to his default value.
                          required: ["defaultParameters"]
            
            EOF
            kubectl apply -f /tmp/crd.yaml
            cat << 'EOF' > /tmp/crd.yaml
            apiVersion: apiextensions.k8s.io/v1beta1
            kind: CustomResourceDefinition
            metadata:
              name: sgpgconfigs.stackgres.io
            spec:
              group: stackgres.io
              versions:
                - name: v1beta1
                  served: true
                  storage: true
              scope: Namespaced
              names:
                kind: SGPostgresConfig
                listKind: SGPostgresConfigList
                plural: sgpgconfigs
                singular: sgpgconfig
                shortNames:
                  - sgpgc
              validation:
                openAPIV3Schema:
                  type: object
                  required: ["metadata", "spec"]
                  properties:
                    metadata:
                      type: object
                      properties:
                        name:
                          type: string
                          description: |
                            Name of the Postgres Configuration. The configuration may be referenced by zero or more SGClusters, and if so it would be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.
            
                            The name must be unique across all Postgres configurations in the same namespace.
                    spec:
                      type: object
                      properties:
                        postgresVersion:
                          type: string
                          description: |
                            The **major** Postgres version the configuration is for. Postgres major versions contain one number starting with version 10 (`10`, `11`, `12`, etc), and two numbers separated by a dot for previous versions (`9.6`, `9.5`, etc).
            
                            Note that Postgres maintains full compatibility across minor versions, and hence a configuration for a given major version will work for any minor version of that same major version.
            
                            Check [StackGres component versions](https://stackgres.io/doc/latest/intro/versions) to see the Postgres versions supported by this version of StackGres.
                        postgresql.conf:
                          type: object
                          additionalProperties:
                            type: string
                          description: |
                            The `postgresql.conf` parameters the configuration contains, represented as an object where the keys are valid names for the `postgresql.conf` configuration file parameters of the given `postgresVersion`. You may check [postgresqlco.nf](https://postgresqlco.nf) as a reference on how to tune and find the valid parameters for a given major version.
                      required: ["postgresVersion", "postgresql.conf"]
                    status:
                      type: object
                      properties:
                        defaultParameters:
                          type: array
                          description: |
                            List of parameters which are set to their default value.
                          items:
                            type: string
                            description: |
                              Name of a parameter that is set to his default value.
                      required: ["defaultParameters"]
            
            EOF
            kubectl apply -f /tmp/crd.yaml
      restartPolicy: OnFailure
---
# Source: stackgres-operator/templates/wait-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-wait"
  namespace: stackgres
  labels:
    app: stackgres-operator
    scope: cleanup
    job: wait
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weigth": "100"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator
        scope: cleanup
        job: wait
    spec:
      serviceAccountName: stackgres-operator-init
      containers:
      - name: "stackgres-operator-wait"
        image: "bitnami/kubectl:1.18.3"
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            kubectl wait job -n 'stackgres' -l app=stackgres-operator,scope=init --for condition=Complete
            kubectl scale --timeout 1h --replicas 1 -n 'stackgres' 'deployment/stackgres-operator'
            kubectl rollout restart -n 'stackgres' 'deployment/stackgres-restapi'
            kubectl rollout status -n 'stackgres' 'deployment/stackgres-operator'
            kubectl rollout status -n 'stackgres' 'deployment/stackgres-restapi'
      restartPolicy: OnFailure
